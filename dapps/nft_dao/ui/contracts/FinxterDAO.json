{
  "contractName": "FinxterDAO",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftMarketplace",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_finxterNFT",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [],
      "name": "numProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nftTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yayVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nayVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nftTokenId",
          "type": "uint256"
        }
      ],
      "name": "createProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        },
        {
          "internalType": "enum FinxterDAO.Vote",
          "name": "vote",
          "type": "uint8"
        }
      ],
      "name": "voteOnProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftMarketplace\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_finxterNFT\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nftTokenId\",\"type\":\"uint256\"}],\"name\":\"createProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yayVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nayVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"},{\"internalType\":\"enum FinxterDAO.Vote\",\"name\":\"vote\",\"type\":\"uint8\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createProposal(uint256)\":{\"details\":\"createProposal allows a FinxterNFT holder to create a new proposal in the DAO\",\"params\":{\"_nftTokenId\":\"- the tokenID of the NFT to be purchased from PseudoNFTMarketplace if this proposal passes\"},\"returns\":{\"_0\":\"Returns the proposal index for the newly created proposal\"}},\"executeProposal(uint256)\":{\"details\":\"executeProposal allows any FinxterNFT holder to execute a proposal after it's deadline has been exceeded\",\"params\":{\"proposalIndex\":\"- the index of the proposal to execute in the proposals array\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"voteOnProposal(uint256,uint8)\":{\"details\":\"voteOnProposal allows a FinxterNFT holder to cast their vote on an active proposal\",\"params\":{\"proposalIndex\":\"- the index of the proposal to vote on in the proposals array\",\"vote\":\"- the type of vote they want to cast\"}},\"withdrawEther()\":{\"details\":\"withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FinxterDAO.sol\":\"FinxterDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/FinxterDAO.sol\":{\"keccak256\":\"0xa7223eb79e82f280df387216a96aeea20c0f0cbbf26a3e0341c4b3f94f514494\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb325b33d0e57f8cadeb0d703a9844f0a39fb99dda6a6403b1fed5d65b8519cf\",\"dweb:/ipfs/QmYNVRnyrzSK1HVZBjcZb3qTbcTtwtk5oMkjkFVnHF7D6g\"]}},\"version\":1}",
  "bytecode": "0x608060405260405162001b4838038062001b48833981810160405281019062000029919062000209565b620000496200003d620000d360201b60201c565b620000db60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000250565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001d182620001a4565b9050919050565b620001e381620001c4565b8114620001ef57600080fd5b50565b6000815190506200020381620001d8565b92915050565b600080604083850312156200022357620002226200019f565b5b60006200023385828601620001f2565b92505060206200024685828601620001f2565b9150509250929050565b6118e880620002606000396000f3fe60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101655780637362377b1461017c5780638da5cb5b14610193578063efafb22e146101be578063f2fde38b146101e757610091565b8063013cf08b146100935780630d61b519146100d4578063400e3949146100fd5780635a43dc001461012857610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190610f33565b610210565b6040516100cb959493929190610f8a565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190610f33565b610253565b005b34801561010957600080fd5b506101126105d4565b60405161011f9190610fdd565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190610f33565b6105da565b60405161015c9190610fdd565b60405180910390f35b34801561017157600080fd5b5061017a610825565b005b34801561018857600080fd5b506101916108ad565b005b34801561019f57600080fd5b506101a8610979565b6040516101b59190611039565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190611079565b6109a2565b005b3480156101f357600080fd5b5061020e600480360381019061020991906110e5565b610d25565b005b60036020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300336040518263ffffffff1660e01b81526004016102b09190611039565b60006040518083038186803b1580156102c857600080fd5b505afa1580156102dc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103059190611280565b9050600081511161034b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034290611326565b60405180910390fd5b8142600360008381526020019081526020016000206001015411156103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c90611392565b60405180910390fd5b600015156003600083815260200190815260200160002060040160009054906101000a900460ff1615151461040f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610406906113fe565b60405180910390fd5b60006003600085815260200190815260200160002090508060030154816002015411156105ce576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a057600080fd5b505afa1580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d8919061141e565b90508047101561051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490611497565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d96a094a8284600001546040518363ffffffff1660e01b815260040161057d9190610fdd565b6000604051808303818588803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b505050505060018260040160006101000a81548160ff021916908315150217905550505b50505050565b60045481565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300336040518263ffffffff1660e01b81526004016106389190611039565b60006040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061068d9190611280565b905060008151116106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90611326565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8846040518263ffffffff1660e01b815260040161072e9190610fdd565b60206040518083038186803b15801561074657600080fd5b505afa15801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e91906114e3565b6107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b49061155c565b60405180910390fd5b6000600360006004548152602001908152602001600020905083816000018190555061012c426107ed91906115ab565b81600101819055506004600081548092919061080890611601565b9190505550600160045461081c919061164a565b92505050919050565b61082d610e1d565b73ffffffffffffffffffffffffffffffffffffffff1661084b610979565b73ffffffffffffffffffffffffffffffffffffffff16146108a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610898906116ca565b60405180910390fd5b6108ab6000610e25565b565b6108b5610e1d565b73ffffffffffffffffffffffffffffffffffffffff166108d3610979565b73ffffffffffffffffffffffffffffffffffffffff1614610929576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610920906116ca565b60405180910390fd5b610931610979565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610976573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300336040518263ffffffff1660e01b81526004016109ff9190611039565b60006040518083038186803b158015610a1757600080fd5b505afa158015610a2b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a549190611280565b90506000815111610a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9190611326565b60405180910390fd5b8242600360008381526020019081526020016000206001015411610af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aea90611736565b60405180910390fd5b60006003600086815260200190815260200160002090506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300336040518263ffffffff1660e01b8152600401610b679190611039565b60006040518083038186803b158015610b7f57600080fd5b505afa158015610b93573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bbc9190611280565b90506000805b8251811015610c6f576000838281518110610be057610bdf611756565b5b602002602001015190506000151585600501600083815260200190815260200160002060009054906101000a900460ff1615151415610c5b578280610c2490611601565b935050600185600501600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050610c6f565b508080610c6790611601565b915050610bc2565b5060008111610cb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caa906117d1565b60405180910390fd5b60006001811115610cc757610cc66117f1565b5b866001811115610cda57610cd96117f1565b5b1415610d005780836002016000828254610cf491906115ab565b92505081905550610d1c565b80836003016000828254610d1491906115ab565b925050819055505b50505050505050565b610d2d610e1d565b73ffffffffffffffffffffffffffffffffffffffff16610d4b610979565b73ffffffffffffffffffffffffffffffffffffffff1614610da1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d98906116ca565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0890611892565b60405180910390fd5b610e1a81610e25565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610f1081610efd565b8114610f1b57600080fd5b50565b600081359050610f2d81610f07565b92915050565b600060208284031215610f4957610f48610ef3565b5b6000610f5784828501610f1e565b91505092915050565b610f6981610efd565b82525050565b60008115159050919050565b610f8481610f6f565b82525050565b600060a082019050610f9f6000830188610f60565b610fac6020830187610f60565b610fb96040830186610f60565b610fc66060830185610f60565b610fd36080830184610f7b565b9695505050505050565b6000602082019050610ff26000830184610f60565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102382610ff8565b9050919050565b61103381611018565b82525050565b600060208201905061104e600083018461102a565b92915050565b6002811061106157600080fd5b50565b60008135905061107381611054565b92915050565b600080604083850312156110905761108f610ef3565b5b600061109e85828601610f1e565b92505060206110af85828601611064565b9150509250929050565b6110c281611018565b81146110cd57600080fd5b50565b6000813590506110df816110b9565b92915050565b6000602082840312156110fb576110fa610ef3565b5b6000611109848285016110d0565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61116082611117565b810181811067ffffffffffffffff8211171561117f5761117e611128565b5b80604052505050565b6000611192610ee9565b905061119e8282611157565b919050565b600067ffffffffffffffff8211156111be576111bd611128565b5b602082029050602081019050919050565b600080fd5b6000815190506111e381610f07565b92915050565b60006111fc6111f7846111a3565b611188565b9050808382526020820190506020840283018581111561121f5761121e6111cf565b5b835b81811015611248578061123488826111d4565b845260208401935050602081019050611221565b5050509392505050565b600082601f83011261126757611266611112565b5b81516112778482602086016111e9565b91505092915050565b60006020828403121561129657611295610ef3565b5b600082015167ffffffffffffffff8111156112b4576112b3610ef8565b5b6112c084828501611252565b91505092915050565b600082825260208201905092915050565b7f4e4f545f415f44414f5f4d454d42455200000000000000000000000000000000600082015250565b60006113106010836112c9565b915061131b826112da565b602082019050919050565b6000602082019050818103600083015261133f81611303565b9050919050565b7f444541444c494e455f4e4f545f45584345454445440000000000000000000000600082015250565b600061137c6015836112c9565b915061138782611346565b602082019050919050565b600060208201905081810360008301526113ab8161136f565b9050919050565b7f50524f504f53414c5f414c52454144595f455845435554454400000000000000600082015250565b60006113e86019836112c9565b91506113f3826113b2565b602082019050919050565b60006020820190508181036000830152611417816113db565b9050919050565b60006020828403121561143457611433610ef3565b5b6000611442848285016111d4565b91505092915050565b7f4e4f545f454e4f5547485f46554e445300000000000000000000000000000000600082015250565b60006114816010836112c9565b915061148c8261144b565b602082019050919050565b600060208201905081810360008301526114b081611474565b9050919050565b6114c081610f6f565b81146114cb57600080fd5b50565b6000815190506114dd816114b7565b92915050565b6000602082840312156114f9576114f8610ef3565b5b6000611507848285016114ce565b91505092915050565b7f4e46545f4e4f545f464f525f53414c4500000000000000000000000000000000600082015250565b60006115466010836112c9565b915061155182611510565b602082019050919050565b6000602082019050818103600083015261157581611539565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115b682610efd565b91506115c183610efd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115f6576115f561157c565b5b828201905092915050565b600061160c82610efd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561163f5761163e61157c565b5b600182019050919050565b600061165582610efd565b915061166083610efd565b9250828210156116735761167261157c565b5b828203905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116b46020836112c9565b91506116bf8261167e565b602082019050919050565b600060208201905081810360008301526116e3816116a7565b9050919050565b7f444541444c494e455f4558434545444544000000000000000000000000000000600082015250565b60006117206011836112c9565b915061172b826116ea565b602082019050919050565b6000602082019050818103600083015261174f81611713565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f414c52454144595f564f54454400000000000000000000000000000000000000600082015250565b60006117bb600d836112c9565b91506117c682611785565b602082019050919050565b600060208201905081810360008301526117ea816117ae565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061187c6026836112c9565b915061188782611820565b604082019050919050565b600060208201905081810360008301526118ab8161186f565b905091905056fea2646970667358221220742e86d26bbad771ce8e9548292020850ac173b552d214c4d01759daeb47193d64736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101655780637362377b1461017c5780638da5cb5b14610193578063efafb22e146101be578063f2fde38b146101e757610091565b8063013cf08b146100935780630d61b519146100d4578063400e3949146100fd5780635a43dc001461012857610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190610f33565b610210565b6040516100cb959493929190610f8a565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190610f33565b610253565b005b34801561010957600080fd5b506101126105d4565b60405161011f9190610fdd565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190610f33565b6105da565b60405161015c9190610fdd565b60405180910390f35b34801561017157600080fd5b5061017a610825565b005b34801561018857600080fd5b506101916108ad565b005b34801561019f57600080fd5b506101a8610979565b6040516101b59190611039565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e09190611079565b6109a2565b005b3480156101f357600080fd5b5061020e600480360381019061020991906110e5565b610d25565b005b60036020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300336040518263ffffffff1660e01b81526004016102b09190611039565b60006040518083038186803b1580156102c857600080fd5b505afa1580156102dc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103059190611280565b9050600081511161034b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034290611326565b60405180910390fd5b8142600360008381526020019081526020016000206001015411156103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c90611392565b60405180910390fd5b600015156003600083815260200190815260200160002060040160009054906101000a900460ff1615151461040f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610406906113fe565b60405180910390fd5b60006003600085815260200190815260200160002090508060030154816002015411156105ce576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a057600080fd5b505afa1580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d8919061141e565b90508047101561051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490611497565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d96a094a8284600001546040518363ffffffff1660e01b815260040161057d9190610fdd565b6000604051808303818588803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b505050505060018260040160006101000a81548160ff021916908315150217905550505b50505050565b60045481565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300336040518263ffffffff1660e01b81526004016106389190611039565b60006040518083038186803b15801561065057600080fd5b505afa158015610664573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061068d9190611280565b905060008151116106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90611326565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8846040518263ffffffff1660e01b815260040161072e9190610fdd565b60206040518083038186803b15801561074657600080fd5b505afa15801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e91906114e3565b6107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b49061155c565b60405180910390fd5b6000600360006004548152602001908152602001600020905083816000018190555061012c426107ed91906115ab565b81600101819055506004600081548092919061080890611601565b9190505550600160045461081c919061164a565b92505050919050565b61082d610e1d565b73ffffffffffffffffffffffffffffffffffffffff1661084b610979565b73ffffffffffffffffffffffffffffffffffffffff16146108a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610898906116ca565b60405180910390fd5b6108ab6000610e25565b565b6108b5610e1d565b73ffffffffffffffffffffffffffffffffffffffff166108d3610979565b73ffffffffffffffffffffffffffffffffffffffff1614610929576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610920906116ca565b60405180910390fd5b610931610979565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610976573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300336040518263ffffffff1660e01b81526004016109ff9190611039565b60006040518083038186803b158015610a1757600080fd5b505afa158015610a2b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a549190611280565b90506000815111610a9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9190611326565b60405180910390fd5b8242600360008381526020019081526020016000206001015411610af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aea90611736565b60405180910390fd5b60006003600086815260200190815260200160002090506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300336040518263ffffffff1660e01b8152600401610b679190611039565b60006040518083038186803b158015610b7f57600080fd5b505afa158015610b93573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bbc9190611280565b90506000805b8251811015610c6f576000838281518110610be057610bdf611756565b5b602002602001015190506000151585600501600083815260200190815260200160002060009054906101000a900460ff1615151415610c5b578280610c2490611601565b935050600185600501600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050610c6f565b508080610c6790611601565b915050610bc2565b5060008111610cb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caa906117d1565b60405180910390fd5b60006001811115610cc757610cc66117f1565b5b866001811115610cda57610cd96117f1565b5b1415610d005780836002016000828254610cf491906115ab565b92505081905550610d1c565b80836003016000828254610d1491906115ab565b925050819055505b50505050505050565b610d2d610e1d565b73ffffffffffffffffffffffffffffffffffffffff16610d4b610979565b73ffffffffffffffffffffffffffffffffffffffff1614610da1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d98906116ca565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0890611892565b60405180910390fd5b610e1a81610e25565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610f1081610efd565b8114610f1b57600080fd5b50565b600081359050610f2d81610f07565b92915050565b600060208284031215610f4957610f48610ef3565b5b6000610f5784828501610f1e565b91505092915050565b610f6981610efd565b82525050565b60008115159050919050565b610f8481610f6f565b82525050565b600060a082019050610f9f6000830188610f60565b610fac6020830187610f60565b610fb96040830186610f60565b610fc66060830185610f60565b610fd36080830184610f7b565b9695505050505050565b6000602082019050610ff26000830184610f60565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102382610ff8565b9050919050565b61103381611018565b82525050565b600060208201905061104e600083018461102a565b92915050565b6002811061106157600080fd5b50565b60008135905061107381611054565b92915050565b600080604083850312156110905761108f610ef3565b5b600061109e85828601610f1e565b92505060206110af85828601611064565b9150509250929050565b6110c281611018565b81146110cd57600080fd5b50565b6000813590506110df816110b9565b92915050565b6000602082840312156110fb576110fa610ef3565b5b6000611109848285016110d0565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61116082611117565b810181811067ffffffffffffffff8211171561117f5761117e611128565b5b80604052505050565b6000611192610ee9565b905061119e8282611157565b919050565b600067ffffffffffffffff8211156111be576111bd611128565b5b602082029050602081019050919050565b600080fd5b6000815190506111e381610f07565b92915050565b60006111fc6111f7846111a3565b611188565b9050808382526020820190506020840283018581111561121f5761121e6111cf565b5b835b81811015611248578061123488826111d4565b845260208401935050602081019050611221565b5050509392505050565b600082601f83011261126757611266611112565b5b81516112778482602086016111e9565b91505092915050565b60006020828403121561129657611295610ef3565b5b600082015167ffffffffffffffff8111156112b4576112b3610ef8565b5b6112c084828501611252565b91505092915050565b600082825260208201905092915050565b7f4e4f545f415f44414f5f4d454d42455200000000000000000000000000000000600082015250565b60006113106010836112c9565b915061131b826112da565b602082019050919050565b6000602082019050818103600083015261133f81611303565b9050919050565b7f444541444c494e455f4e4f545f45584345454445440000000000000000000000600082015250565b600061137c6015836112c9565b915061138782611346565b602082019050919050565b600060208201905081810360008301526113ab8161136f565b9050919050565b7f50524f504f53414c5f414c52454144595f455845435554454400000000000000600082015250565b60006113e86019836112c9565b91506113f3826113b2565b602082019050919050565b60006020820190508181036000830152611417816113db565b9050919050565b60006020828403121561143457611433610ef3565b5b6000611442848285016111d4565b91505092915050565b7f4e4f545f454e4f5547485f46554e445300000000000000000000000000000000600082015250565b60006114816010836112c9565b915061148c8261144b565b602082019050919050565b600060208201905081810360008301526114b081611474565b9050919050565b6114c081610f6f565b81146114cb57600080fd5b50565b6000815190506114dd816114b7565b92915050565b6000602082840312156114f9576114f8610ef3565b5b6000611507848285016114ce565b91505092915050565b7f4e46545f4e4f545f464f525f53414c4500000000000000000000000000000000600082015250565b60006115466010836112c9565b915061155182611510565b602082019050919050565b6000602082019050818103600083015261157581611539565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115b682610efd565b91506115c183610efd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115f6576115f561157c565b5b828201905092915050565b600061160c82610efd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561163f5761163e61157c565b5b600182019050919050565b600061165582610efd565b915061166083610efd565b9250828210156116735761167261157c565b5b828203905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116b46020836112c9565b91506116bf8261167e565b602082019050919050565b600060208201905081810360008301526116e3816116a7565b9050919050565b7f444541444c494e455f4558434545444544000000000000000000000000000000600082015250565b60006117206011836112c9565b915061172b826116ea565b602082019050919050565b6000602082019050818103600083015261174f81611713565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f414c52454144595f564f54454400000000000000000000000000000000000000600082015250565b60006117bb600d836112c9565b91506117c682611785565b602082019050919050565b600060208201905081810360008301526117ea816117ae565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061187c6026836112c9565b915061188782611820565b604082019050919050565b600060208201905081810360008301526118ab8161186f565b905091905056fea2646970667358221220742e86d26bbad771ce8e9548292020850ac173b552d214c4d01759daeb47193d64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1355:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:4",
                "type": ""
              }
            ],
            "src": "7:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:4",
                "type": ""
              }
            ],
            "src": "334:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:4",
                "type": ""
              }
            ],
            "src": "466:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:4",
                "type": ""
              }
            ],
            "src": "568:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:4",
                "type": ""
              }
            ],
            "src": "696:143:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "939:413:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "985:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "987:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "987:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "987:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "960:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "969:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "956:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "956:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "981:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "952:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "952:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "949:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1078:128:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1093:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1107:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1097:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1122:74:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1168:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1179:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1164:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1164:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1188:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1132:31:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:64:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1122:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1216:129:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1231:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1245:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1235:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1261:74:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1307:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1318:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1303:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1303:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1327:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1271:31:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:64:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1261:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "901:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "912:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "924:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "932:6:4",
                "type": ""
              }
            ],
            "src": "845:507:4"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:18619:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:4",
                "type": ""
              }
            ],
            "src": "7:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:4",
                "type": ""
              }
            ],
            "src": "334:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:4",
                "type": ""
              }
            ],
            "src": "417:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:4",
                "type": ""
              }
            ],
            "src": "545:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:4",
                "type": ""
              }
            ],
            "src": "690:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1090:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1107:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1130:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1112:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1112:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1100:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1100:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1078:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1085:3:4",
                "type": ""
              }
            ],
            "src": "1025:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1191:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1201:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1226:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1219:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1219:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1212:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1212:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1201:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1173:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1183:7:4",
                "type": ""
              }
            ],
            "src": "1149:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1304:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1321:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1341:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1326:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1326:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1314:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1314:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1314:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1292:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1299:3:4",
                "type": ""
              }
            ],
            "src": "1245:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1564:448:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1574:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1586:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1597:3:4",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1582:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1582:19:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1574:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1655:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1668:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1679:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1664:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1664:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1611:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1611:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1736:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1749:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1760:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1745:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1745:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1692:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1692:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1692:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1818:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1831:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1842:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1827:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1827:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1774:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1774:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1774:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1900:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1913:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1924:2:4",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1909:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1909:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1856:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1856:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1856:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "1976:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1989:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2000:3:4",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1985:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1985:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1938:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1938:67:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1938:67:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1504:9:4",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1516:6:4",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1524:6:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1532:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1540:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1548:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1559:4:4",
                "type": ""
              }
            ],
            "src": "1360:652:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2116:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2126:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2138:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2149:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2134:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2134:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2126:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2206:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2219:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2230:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2215:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2215:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2162:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2162:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2088:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2100:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2111:4:4",
                "type": ""
              }
            ],
            "src": "2018:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2291:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2301:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2316:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2323:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2312:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2312:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2301:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2273:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2283:7:4",
                "type": ""
              }
            ],
            "src": "2246:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2423:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2433:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2462:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2444:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2444:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2433:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2405:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2415:7:4",
                "type": ""
              }
            ],
            "src": "2378:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2545:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2562:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2585:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2567:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2567:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2555:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2555:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2555:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2533:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2540:3:4",
                "type": ""
              }
            ],
            "src": "2480:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2702:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2712:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2724:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2735:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2720:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2720:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2712:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2792:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2805:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2816:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2801:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2801:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2748:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2748:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2748:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2674:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2686:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2697:4:4",
                "type": ""
              }
            ],
            "src": "2604:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2883:56:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2917:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2926:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2929:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2919:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2919:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2919:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2906:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2913:1:4",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2903:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2903:12:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2896:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:20:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2893:40:4"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Vote_$188",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2876:5:4",
                "type": ""
              }
            ],
            "src": "2832:107:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3005:95:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3015:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3037:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3024:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3024:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3015:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3088:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Vote_$188",
                      "nodeType": "YulIdentifier",
                      "src": "3053:34:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3053:41:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3053:41:4"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Vote_$188",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2983:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2991:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2999:5:4",
                "type": ""
              }
            ],
            "src": "2945:155:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3197:399:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3243:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3245:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3245:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3245:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3218:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3227:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3214:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3214:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3239:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3210:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3210:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3207:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3336:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3351:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3365:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3355:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3380:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3415:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3426:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3411:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3411:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3435:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3390:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3390:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3380:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3463:126:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3478:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3492:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3482:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3508:71:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3551:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3562:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3547:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3547:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3571:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Vote_$188",
                          "nodeType": "YulIdentifier",
                          "src": "3518:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3518:61:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3508:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_enum$_Vote_$188",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3159:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3170:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3182:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3190:6:4",
                "type": ""
              }
            ],
            "src": "3106:490:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3645:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3702:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3711:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3714:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3704:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3704:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3704:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3668:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3693:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3675:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3675:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3665:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3665:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3658:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3658:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3655:63:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3638:5:4",
                "type": ""
              }
            ],
            "src": "3602:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3782:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3792:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3814:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3801:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3801:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3792:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3857:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3830:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3830:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3830:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3760:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3768:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3776:5:4",
                "type": ""
              }
            ],
            "src": "3730:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3941:263:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3987:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3989:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3989:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3989:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3962:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3971:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3958:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3958:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3983:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3954:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3954:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3951:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4080:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4095:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4109:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4099:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4124:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4159:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4170:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4155:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4155:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4179:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4134:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4134:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4124:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3911:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3922:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3934:6:4",
                "type": ""
              }
            ],
            "src": "3875:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4299:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4316:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4319:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4309:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4309:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4309:12:4"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "4210:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4381:54:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4391:38:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4409:5:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4416:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4405:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4405:14:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4425:2:4",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4421:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4421:7:4"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4401:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4401:28:4"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "4391:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4364:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "4374:6:4",
                "type": ""
              }
            ],
            "src": "4333:102:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4469:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4486:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4489:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4479:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4479:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4479:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4583:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4586:4:4",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4576:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4576:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4576:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4607:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4610:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4600:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4600:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4600:15:4"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "4441:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4670:238:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4680:58:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4702:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "4732:4:4"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "4710:21:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4710:27:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4698:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4698:40:4"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "4684:10:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4849:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4851:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4851:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4851:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4792:10:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4804:18:4",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4789:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4789:34:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4828:10:4"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4840:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4825:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4825:22:4"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4786:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4786:62:4"
                  },
                  "nodeType": "YulIf",
                  "src": "4783:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4887:2:4",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "4891:10:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4880:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4880:22:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4880:22:4"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4656:6:4",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "4664:4:4",
                "type": ""
              }
            ],
            "src": "4627:281:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4955:88:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4965:30:4",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "4975:18:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4975:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "4965:6:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5024:6:4"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5032:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "5004:19:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5004:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5004:33:4"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "4939:4:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4948:6:4",
                "type": ""
              }
            ],
            "src": "4914:129:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5131:229:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5236:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5238:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5238:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5238:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5208:6:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5216:18:4",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5205:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5205:30:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5202:56:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5268:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5280:6:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5288:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "5276:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5276:17:4"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5268:4:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5330:23:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5342:4:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5348:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5338:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5338:15:4"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5330:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5115:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5126:4:4",
                "type": ""
              }
            ],
            "src": "5049:311:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5455:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5472:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5475:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5465:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5465:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5465:12:4"
                }
              ]
            },
            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
            "nodeType": "YulFunctionDefinition",
            "src": "5366:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5552:80:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5562:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5577:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5571:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5571:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5562:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5620:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5593:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5593:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5593:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5530:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5538:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5546:5:4",
                "type": ""
              }
            ],
            "src": "5489:143:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5768:619:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5778:90:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5860:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "5803:56:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5803:64:4"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5787:15:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5787:81:4"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "5778:5:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5877:16:4",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "5888:5:4"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "5881:3:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "5910:5:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5917:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5903:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5903:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5903:21:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5933:23:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "5944:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5951:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5940:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5940:16:4"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "5933:3:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5966:44:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5984:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5996:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6004:4:4",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "5992:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5992:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5980:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5980:30:4"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "5970:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6038:103:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                            "nodeType": "YulIdentifier",
                            "src": "6052:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6052:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6052:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6025:6:4"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "6033:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6022:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6022:15:4"
                  },
                  "nodeType": "YulIf",
                  "src": "6019:122:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6226:155:4",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6241:21:4",
                        "value": {
                          "name": "src",
                          "nodeType": "YulIdentifier",
                          "src": "6259:3:4"
                        },
                        "variables": [
                          {
                            "name": "elementPos",
                            "nodeType": "YulTypedName",
                            "src": "6245:10:4",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "6283:3:4"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "elementPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6320:10:4"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6332:3:4"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_uint256_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "6288:31:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6288:48:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6276:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6276:61:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6276:61:4"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6350:21:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "6361:3:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6366:4:4",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6357:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6357:14:4"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6350:3:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "6179:3:4"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6184:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6176:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6176:15:4"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6192:25:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6194:21:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "6205:3:4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6210:4:4",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6201:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6201:14:4"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "6194:3:4"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6154:21:4",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6156:17:4",
                        "value": {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "6167:6:4"
                        },
                        "variables": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "6160:3:4",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "6150:231:4"
                }
              ]
            },
            "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5738:6:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5746:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5754:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "5762:5:4",
                "type": ""
              }
            ],
            "src": "5655:732:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6498:297:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6547:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "6549:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6549:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6549:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6526:6:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6534:4:4",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6522:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6522:17:4"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "6541:3:4"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6518:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6518:27:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6511:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6511:35:4"
                  },
                  "nodeType": "YulIf",
                  "src": "6508:122:4"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6639:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6659:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6653:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6653:13:4"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6643:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6675:114:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "6762:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6770:4:4",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6758:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6758:17:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6777:6:4"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "6785:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "6684:73:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6684:105:4"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "6675:5:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6476:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6484:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "6492:5:4",
                "type": ""
              }
            ],
            "src": "6410:385:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6903:452:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6949:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6951:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6951:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6951:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6924:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6933:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6920:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6920:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6945:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6916:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6916:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "6913:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7042:306:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7057:38:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7081:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7092:1:4",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7077:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7077:17:4"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7071:5:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7071:24:4"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7061:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7142:83:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "7144:77:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7144:79:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7144:79:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "7114:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7122:18:4",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7111:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7111:30:4"
                      },
                      "nodeType": "YulIf",
                      "src": "7108:117:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7239:99:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7310:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7321:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7306:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7306:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7330:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7249:56:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7249:89:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7239:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6873:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6884:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6896:6:4",
                "type": ""
              }
            ],
            "src": "6801:554:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7457:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7474:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7479:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7467:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7467:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7467:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7495:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7514:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7519:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7510:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7510:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7495:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7429:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7434:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7445:11:4",
                "type": ""
              }
            ],
            "src": "7361:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7642:60:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7664:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7672:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7660:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7660:14:4"
                      },
                      {
                        "hexValue": "4e4f545f415f44414f5f4d454d424552",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7676:18:4",
                        "type": "",
                        "value": "NOT_A_DAO_MEMBER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7653:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7653:42:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7653:42:4"
                }
              ]
            },
            "name": "store_literal_in_memory_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7634:6:4",
                "type": ""
              }
            ],
            "src": "7536:166:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7854:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7864:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7930:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7935:2:4",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7871:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7871:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7864:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8036:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3",
                      "nodeType": "YulIdentifier",
                      "src": "7947:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7947:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7947:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8049:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8060:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8065:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8056:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8056:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8049:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7842:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7850:3:4",
                "type": ""
              }
            ],
            "src": "7708:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8251:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8261:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8273:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8284:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8269:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8269:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8261:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8308:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8319:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8304:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8304:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8327:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8333:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8323:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8323:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8297:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8297:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8297:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8353:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8487:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8361:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8361:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8353:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8231:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8246:4:4",
                "type": ""
              }
            ],
            "src": "8080:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8611:65:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8633:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8641:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8629:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8629:14:4"
                      },
                      {
                        "hexValue": "444541444c494e455f4e4f545f4558434545444544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8645:23:4",
                        "type": "",
                        "value": "DEADLINE_NOT_EXCEEDED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8622:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8622:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8622:47:4"
                }
              ]
            },
            "name": "store_literal_in_memory_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8603:6:4",
                "type": ""
              }
            ],
            "src": "8505:171:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8828:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8838:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8904:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8909:2:4",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8845:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8845:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8838:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9010:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea",
                      "nodeType": "YulIdentifier",
                      "src": "8921:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8921:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8921:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9023:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9034:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9039:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9030:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9030:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9023:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8816:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8824:3:4",
                "type": ""
              }
            ],
            "src": "8682:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9225:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9235:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9247:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9258:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9243:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9243:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9235:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9282:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9293:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9278:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9278:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9301:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9307:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9297:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9297:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9271:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9271:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9271:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9327:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9461:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9335:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9335:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9327:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9205:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9220:4:4",
                "type": ""
              }
            ],
            "src": "9054:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9585:69:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9607:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9615:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9603:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9603:14:4"
                      },
                      {
                        "hexValue": "50524f504f53414c5f414c52454144595f4558454355544544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9619:27:4",
                        "type": "",
                        "value": "PROPOSAL_ALREADY_EXECUTED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9596:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9596:51:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9596:51:4"
                }
              ]
            },
            "name": "store_literal_in_memory_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9577:6:4",
                "type": ""
              }
            ],
            "src": "9479:175:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9806:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9816:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9882:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9887:2:4",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9823:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9823:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9816:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9988:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4",
                      "nodeType": "YulIdentifier",
                      "src": "9899:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9899:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9899:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10001:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10012:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10017:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10008:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10008:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10001:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9794:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9802:3:4",
                "type": ""
              }
            ],
            "src": "9660:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10203:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10213:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10225:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10236:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10221:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10221:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10213:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10260:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10271:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10256:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10256:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10279:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10285:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10275:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10275:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10249:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10249:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10249:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10305:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10439:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10313:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10313:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10305:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10183:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10198:4:4",
                "type": ""
              }
            ],
            "src": "10032:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10534:274:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10580:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10582:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10582:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10582:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10555:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10564:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10551:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10551:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10576:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10547:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10547:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "10544:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10673:128:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10688:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10702:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10692:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10717:74:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10763:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10774:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10759:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10759:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10783:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10727:31:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10727:64:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10717:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10504:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10515:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10527:6:4",
                "type": ""
              }
            ],
            "src": "10457:351:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10920:60:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10942:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10950:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10938:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10938:14:4"
                      },
                      {
                        "hexValue": "4e4f545f454e4f5547485f46554e4453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10954:18:4",
                        "type": "",
                        "value": "NOT_ENOUGH_FUNDS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10931:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10931:42:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10931:42:4"
                }
              ]
            },
            "name": "store_literal_in_memory_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10912:6:4",
                "type": ""
              }
            ],
            "src": "10814:166:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11132:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11142:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11208:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11213:2:4",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11149:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11149:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11142:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11314:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b",
                      "nodeType": "YulIdentifier",
                      "src": "11225:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11225:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11225:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11327:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11338:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11343:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11334:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11334:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11327:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11120:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11128:3:4",
                "type": ""
              }
            ],
            "src": "10986:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11529:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11539:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11551:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11562:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11547:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11547:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11539:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11586:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11597:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11582:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11582:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11605:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11611:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11601:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11601:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11575:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11575:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11575:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11631:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11765:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11639:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11639:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11631:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11509:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11524:4:4",
                "type": ""
              }
            ],
            "src": "11358:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11823:76:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11877:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11886:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11889:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11879:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11879:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11879:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11846:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11868:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "11853:14:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11853:21:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11843:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11843:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11836:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11836:40:4"
                  },
                  "nodeType": "YulIf",
                  "src": "11833:60:4"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11816:5:4",
                "type": ""
              }
            ],
            "src": "11783:116:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11965:77:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11975:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11990:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11984:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11984:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11975:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12030:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12006:23:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12006:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12006:30:4"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11943:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11951:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11959:5:4",
                "type": ""
              }
            ],
            "src": "11905:137:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12122:271:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12168:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "12170:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12170:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12170:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12143:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12152:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12139:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12139:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12164:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12135:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12135:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "12132:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12261:125:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12276:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12290:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "12280:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12305:71:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12348:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12359:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12344:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12344:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12368:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "12315:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12315:61:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "12305:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12092:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12103:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12115:6:4",
                "type": ""
              }
            ],
            "src": "12048:345:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12505:60:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12527:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12535:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12523:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12523:14:4"
                      },
                      {
                        "hexValue": "4e46545f4e4f545f464f525f53414c45",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12539:18:4",
                        "type": "",
                        "value": "NFT_NOT_FOR_SALE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12516:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12516:42:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12516:42:4"
                }
              ]
            },
            "name": "store_literal_in_memory_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12497:6:4",
                "type": ""
              }
            ],
            "src": "12399:166:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12717:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12727:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12793:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12798:2:4",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12734:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12734:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12727:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12899:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247",
                      "nodeType": "YulIdentifier",
                      "src": "12810:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12810:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12810:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12912:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12923:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12928:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12919:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12919:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12912:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12705:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12713:3:4",
                "type": ""
              }
            ],
            "src": "12571:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13114:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13124:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13136:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13147:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13132:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13132:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13124:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13171:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13182:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13167:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13167:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13190:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13196:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13186:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13186:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13160:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13160:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13160:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13216:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13350:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13224:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13224:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13216:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13094:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13109:4:4",
                "type": ""
              }
            ],
            "src": "12943:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13396:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13413:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13416:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13406:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13406:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13406:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13510:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13513:4:4",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13503:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13503:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13503:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13534:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13537:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13527:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13527:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13527:15:4"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13368:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13598:261:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13608:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13631:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13613:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13613:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13608:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13642:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13665:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13647:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13647:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13642:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13805:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13807:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13807:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13807:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13726:1:4"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13733:66:4",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13801:1:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13729:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13729:74:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13723:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13723:81:4"
                  },
                  "nodeType": "YulIf",
                  "src": "13720:107:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13837:16:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13848:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13851:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13844:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13844:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13837:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13585:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13588:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13594:3:4",
                "type": ""
              }
            ],
            "src": "13554:305:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13908:190:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13918:33:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13945:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13927:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13927:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "13918:5:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14041:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14043:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14043:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14043:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13966:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13973:66:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "13963:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13963:77:4"
                  },
                  "nodeType": "YulIf",
                  "src": "13960:103:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14072:20:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14083:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14090:1:4",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14079:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14079:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14072:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13894:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "13904:3:4",
                "type": ""
              }
            ],
            "src": "13865:233:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14149:146:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14159:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14182:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14164:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14164:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "14159:1:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14193:25:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14216:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14198:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14198:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "14193:1:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14240:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14242:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14242:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14242:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14234:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14237:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14231:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14231:8:4"
                  },
                  "nodeType": "YulIf",
                  "src": "14228:34:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14272:17:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14284:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14287:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14280:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14280:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14272:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14135:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14138:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14144:4:4",
                "type": ""
              }
            ],
            "src": "14104:191:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14407:76:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14429:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14437:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14425:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14425:14:4"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14441:34:4",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14418:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14418:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14418:58:4"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14399:6:4",
                "type": ""
              }
            ],
            "src": "14301:182:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14635:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14645:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14711:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14716:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14652:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14652:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14645:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14817:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "14728:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14728:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14728:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14830:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14841:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14846:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14837:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14837:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14830:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14623:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14631:3:4",
                "type": ""
              }
            ],
            "src": "14489:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15032:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15042:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15054:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15065:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15050:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15050:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15042:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15089:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15100:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15085:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15085:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15108:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15114:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15104:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15104:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15078:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15078:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15078:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15134:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15268:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15142:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15142:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15134:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15012:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15027:4:4",
                "type": ""
              }
            ],
            "src": "14861:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15392:61:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15414:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15422:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15410:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15410:14:4"
                      },
                      {
                        "hexValue": "444541444c494e455f4558434545444544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15426:19:4",
                        "type": "",
                        "value": "DEADLINE_EXCEEDED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15403:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15403:43:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15403:43:4"
                }
              ]
            },
            "name": "store_literal_in_memory_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15384:6:4",
                "type": ""
              }
            ],
            "src": "15286:167:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15605:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15615:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15681:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15686:2:4",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15622:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15622:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15615:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15787:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd",
                      "nodeType": "YulIdentifier",
                      "src": "15698:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15698:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15698:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15800:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15811:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15816:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15807:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15807:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15800:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15593:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15601:3:4",
                "type": ""
              }
            ],
            "src": "15459:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16002:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16012:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16024:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16035:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16020:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16020:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16012:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16059:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16070:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16055:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16055:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16078:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16084:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16074:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16074:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16048:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16048:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16048:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16104:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16238:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16112:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16112:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16104:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15982:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15997:4:4",
                "type": ""
              }
            ],
            "src": "15831:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16284:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16301:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16304:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16294:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16294:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16294:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16398:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16401:4:4",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16391:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16391:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16391:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16422:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16425:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16415:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16415:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16415:15:4"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "16256:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16548:57:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16570:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16578:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16566:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16566:14:4"
                      },
                      {
                        "hexValue": "414c52454144595f564f544544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16582:15:4",
                        "type": "",
                        "value": "ALREADY_VOTED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16559:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16559:39:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16559:39:4"
                }
              ]
            },
            "name": "store_literal_in_memory_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16540:6:4",
                "type": ""
              }
            ],
            "src": "16442:163:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16757:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16767:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16833:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16838:2:4",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16774:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16774:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16767:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16939:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80",
                      "nodeType": "YulIdentifier",
                      "src": "16850:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16850:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16850:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16952:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16963:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16968:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16959:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16959:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16952:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16745:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16753:3:4",
                "type": ""
              }
            ],
            "src": "16611:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17154:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17164:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17176:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17187:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17172:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17172:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17164:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17211:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17222:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17207:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17207:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17230:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17236:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17226:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17226:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17200:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17200:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17200:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17256:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17390:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17264:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17264:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17256:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17134:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17149:4:4",
                "type": ""
              }
            ],
            "src": "16983:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17436:152:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17453:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17456:77:4",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17446:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17446:88:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17446:88:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17550:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17553:4:4",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17543:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17543:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17543:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17574:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17577:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "17567:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17567:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17567:15:4"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "17408:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17700:119:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17722:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17730:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17718:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17718:14:4"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17734:34:4",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17711:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17711:58:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17711:58:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17790:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17798:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17786:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17786:15:4"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17803:8:4",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17779:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17779:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17779:33:4"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17692:6:4",
                "type": ""
              }
            ],
            "src": "17594:225:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17971:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17981:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18047:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18052:2:4",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17988:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17988:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17981:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18153:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "18064:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18064:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18064:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18166:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18177:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18182:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18173:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18173:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18166:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17959:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17967:3:4",
                "type": ""
              }
            ],
            "src": "17825:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18368:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18378:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18390:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18401:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18386:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18386:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18378:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18425:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18436:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18421:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18421:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18444:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18450:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18440:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18440:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18414:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18414:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18414:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18470:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18604:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18478:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18478:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18470:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18348:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18363:4:4",
                "type": ""
              }
            ],
            "src": "18197:419:4"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_Vote_$188(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Vote_$188(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Vote_$188(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_Vote_$188(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Vote_$188(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"NOT_A_DAO_MEMBER\")\n\n    }\n\n    function abi_encode_t_stringliteral_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"DEADLINE_NOT_EXCEEDED\")\n\n    }\n\n    function abi_encode_t_stringliteral_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"PROPOSAL_ALREADY_EXECUTED\")\n\n    }\n\n    function abi_encode_t_stringliteral_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"NOT_ENOUGH_FUNDS\")\n\n    }\n\n    function abi_encode_t_stringliteral_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT_NOT_FOR_SALE\")\n\n    }\n\n    function abi_encode_t_stringliteral_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"DEADLINE_EXCEEDED\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80(memPtr) {\n\n        mstore(add(memPtr, 0), \"ALREADY_VOTED\")\n\n    }\n\n    function abi_encode_t_stringliteral_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1153:6409:2:-:0;;;3978:253;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;4088:15:2;4054:14;;:50;;;;;;;;;;;;;;;;;;4176:11;4151:10;;:37;;;;;;;;;;;;;;;;;;3978:253;;1153:6409;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1153:6409:2:-;;;;;;;",
  "deployedSourceMap": "1153:6409:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2319:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;6509:629;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2420:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4520:496;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;7246:109:2;;;;;;;;;;;;;:::i;:::-;;1036:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5266:1028:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2319:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6509:629::-;2671:26;2700:10;;;;;;;;;;;:24;;;2725:10;2700:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2671:65;;2773:1;2754:9;:16;:20;2746:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;6625:13:::1;3555:15;3518:9;:24;3528:13;3518:24;;;;;;;;;;;:33;;;:52;;3497:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;3685:5;3648:42;;:9;:24;3658:13;3648:24;;;;;;;;;;;:33;;;;;;;;;;;;:42;;;3627:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;6654:25:::2;6682:9;:24;6692:13;6682:24;;;;;;;;;;;6654:52;;6860:8;:17;;;6840:8;:17;;;:37;6836:296;;;6893:16;6912:14;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6893:44;;6984:8;6959:21;:33;;6951:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;7027:14;;;;;;;;;;;:18;;;7053:8;7063;:19;;;7027:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;7117:4;7097:8;:17;;;:24;;;;;;;;;;;;;;;;;;6879:253;6836:296;6644:494;2805:1:::1;2661:152:::0;6509:629;:::o;2420:27::-;;;;:::o;4520:496::-;4621:7;2671:26;2700:10;;;;;;;;;;;:24;;;2725:10;2700:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2671:65;;2773:1;2754:9;:16;:20;2746:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;4652:14:::1;;;;;;;;;;;:24;;;4677:11;4652:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4644:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4720:25;4748:9;:23;4758:12;;4748:23;;;;;;;;;;;4720:51;;4803:11;4781:8;:19;;:33;;;;4941:9;4923:15;:27;;;;:::i;:::-;4903:8;:17;;:47;;;;4961:12;;:14;;;;;;;;;:::i;:::-;;;;;;5008:1;4993:12;;:16;;;;:::i;:::-;4986:23;;;2661:152:::0;4520:496;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;7246:109:2:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7308:7:2::1;:5;:7::i;:::-;7300:25;;:48;7326:21;7300:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7246:109::o:0;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;5266:1028:2:-;2671:26;2700:10;;;;;;;;;;;:24;;;2725:10;2700:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2671:65;;2773:1;2754:9;:16;:20;2746:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;5390:13:::1;3111:15;3075:9;:24;3085:13;3075:24;;;;;;;;;;;:33;;;:51;3054:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;5419:25:::2;5447:9;:24;5457:13;5447:24;;;;;;;;;;;5419:52;;5539:26;5568:10;;;;;;;;;;;:24;;;5593:10;5568:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5539:65;;5614:16;5778:9:::0;5773:269:::2;5797:9;:16;5793:1;:20;5773:269;;;5834:15;5852:9;5862:1;5852:12;;;;;;;;:::i;:::-;;;;;;;;5834:30;;5910:5;5882:33;;:8;:15;;:24;5898:7;5882:24;;;;;;;;;;;;;;;;;;;;;:33;;;5878:154;;;5935:10;;;;;:::i;:::-;;;;5990:4;5963:8;:15;;:24;5979:7;5963:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;6012:5;;;5878:154;5820:222;5815:3;;;;;:::i;:::-;;;;5773:269;;;;6070:1;6059:8;:12;6051:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;6164:8;6156:16;;;;;;;;:::i;:::-;;:4;:16;;;;;;;;:::i;:::-;;;6152:136;;;6209:8;6188;:17;;;:29;;;;;;;:::i;:::-;;;;;;;;6152:136;;;6269:8;6248;:17;;;:29;;;;;;;:::i;:::-;;;;;;;;6152:136;5409:885;;;2805:1:::1;2661:152:::0;5266:1028;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:90::-;1183:7;1226:5;1219:13;1212:21;1201:32;;1149:90;;;:::o;1245:109::-;1326:21;1341:5;1326:21;:::i;:::-;1321:3;1314:34;1245:109;;:::o;1360:652::-;1559:4;1597:3;1586:9;1582:19;1574:27;;1611:71;1679:1;1668:9;1664:17;1655:6;1611:71;:::i;:::-;1692:72;1760:2;1749:9;1745:18;1736:6;1692:72;:::i;:::-;1774;1842:2;1831:9;1827:18;1818:6;1774:72;:::i;:::-;1856;1924:2;1913:9;1909:18;1900:6;1856:72;:::i;:::-;1938:67;2000:3;1989:9;1985:19;1976:6;1938:67;:::i;:::-;1360:652;;;;;;;;:::o;2018:222::-;2111:4;2149:2;2138:9;2134:18;2126:26;;2162:71;2230:1;2219:9;2215:17;2206:6;2162:71;:::i;:::-;2018:222;;;;:::o;2246:126::-;2283:7;2323:42;2316:5;2312:54;2301:65;;2246:126;;;:::o;2378:96::-;2415:7;2444:24;2462:5;2444:24;:::i;:::-;2433:35;;2378:96;;;:::o;2480:118::-;2567:24;2585:5;2567:24;:::i;:::-;2562:3;2555:37;2480:118;;:::o;2604:222::-;2697:4;2735:2;2724:9;2720:18;2712:26;;2748:71;2816:1;2805:9;2801:17;2792:6;2748:71;:::i;:::-;2604:222;;;;:::o;2832:107::-;2913:1;2906:5;2903:12;2893:40;;2929:1;2926;2919:12;2893:40;2832:107;:::o;2945:155::-;2999:5;3037:6;3024:20;3015:29;;3053:41;3088:5;3053:41;:::i;:::-;2945:155;;;;:::o;3106:490::-;3182:6;3190;3239:2;3227:9;3218:7;3214:23;3210:32;3207:119;;;3245:79;;:::i;:::-;3207:119;3365:1;3390:53;3435:7;3426:6;3415:9;3411:22;3390:53;:::i;:::-;3380:63;;3336:117;3492:2;3518:61;3571:7;3562:6;3551:9;3547:22;3518:61;:::i;:::-;3508:71;;3463:126;3106:490;;;;;:::o;3602:122::-;3675:24;3693:5;3675:24;:::i;:::-;3668:5;3665:35;3655:63;;3714:1;3711;3704:12;3655:63;3602:122;:::o;3730:139::-;3776:5;3814:6;3801:20;3792:29;;3830:33;3857:5;3830:33;:::i;:::-;3730:139;;;;:::o;3875:329::-;3934:6;3983:2;3971:9;3962:7;3958:23;3954:32;3951:119;;;3989:79;;:::i;:::-;3951:119;4109:1;4134:53;4179:7;4170:6;4159:9;4155:22;4134:53;:::i;:::-;4124:63;;4080:117;3875:329;;;;:::o;4210:117::-;4319:1;4316;4309:12;4333:102;4374:6;4425:2;4421:7;4416:2;4409:5;4405:14;4401:28;4391:38;;4333:102;;;:::o;4441:180::-;4489:77;4486:1;4479:88;4586:4;4583:1;4576:15;4610:4;4607:1;4600:15;4627:281;4710:27;4732:4;4710:27;:::i;:::-;4702:6;4698:40;4840:6;4828:10;4825:22;4804:18;4792:10;4789:34;4786:62;4783:88;;;4851:18;;:::i;:::-;4783:88;4891:10;4887:2;4880:22;4670:238;4627:281;;:::o;4914:129::-;4948:6;4975:20;;:::i;:::-;4965:30;;5004:33;5032:4;5024:6;5004:33;:::i;:::-;4914:129;;;:::o;5049:311::-;5126:4;5216:18;5208:6;5205:30;5202:56;;;5238:18;;:::i;:::-;5202:56;5288:4;5280:6;5276:17;5268:25;;5348:4;5342;5338:15;5330:23;;5049:311;;;:::o;5366:117::-;5475:1;5472;5465:12;5489:143;5546:5;5577:6;5571:13;5562:22;;5593:33;5620:5;5593:33;:::i;:::-;5489:143;;;;:::o;5655:732::-;5762:5;5787:81;5803:64;5860:6;5803:64;:::i;:::-;5787:81;:::i;:::-;5778:90;;5888:5;5917:6;5910:5;5903:21;5951:4;5944:5;5940:16;5933:23;;6004:4;5996:6;5992:17;5984:6;5980:30;6033:3;6025:6;6022:15;6019:122;;;6052:79;;:::i;:::-;6019:122;6167:6;6150:231;6184:6;6179:3;6176:15;6150:231;;;6259:3;6288:48;6332:3;6320:10;6288:48;:::i;:::-;6283:3;6276:61;6366:4;6361:3;6357:14;6350:21;;6226:155;6210:4;6205:3;6201:14;6194:21;;6150:231;;;6154:21;5768:619;;5655:732;;;;;:::o;6410:385::-;6492:5;6541:3;6534:4;6526:6;6522:17;6518:27;6508:122;;6549:79;;:::i;:::-;6508:122;6659:6;6653:13;6684:105;6785:3;6777:6;6770:4;6762:6;6758:17;6684:105;:::i;:::-;6675:114;;6498:297;6410:385;;;;:::o;6801:554::-;6896:6;6945:2;6933:9;6924:7;6920:23;6916:32;6913:119;;;6951:79;;:::i;:::-;6913:119;7092:1;7081:9;7077:17;7071:24;7122:18;7114:6;7111:30;7108:117;;;7144:79;;:::i;:::-;7108:117;7249:89;7330:7;7321:6;7310:9;7306:22;7249:89;:::i;:::-;7239:99;;7042:306;6801:554;;;;:::o;7361:169::-;7445:11;7479:6;7474:3;7467:19;7519:4;7514:3;7510:14;7495:29;;7361:169;;;;:::o;7536:166::-;7676:18;7672:1;7664:6;7660:14;7653:42;7536:166;:::o;7708:366::-;7850:3;7871:67;7935:2;7930:3;7871:67;:::i;:::-;7864:74;;7947:93;8036:3;7947:93;:::i;:::-;8065:2;8060:3;8056:12;8049:19;;7708:366;;;:::o;8080:419::-;8246:4;8284:2;8273:9;8269:18;8261:26;;8333:9;8327:4;8323:20;8319:1;8308:9;8304:17;8297:47;8361:131;8487:4;8361:131;:::i;:::-;8353:139;;8080:419;;;:::o;8505:171::-;8645:23;8641:1;8633:6;8629:14;8622:47;8505:171;:::o;8682:366::-;8824:3;8845:67;8909:2;8904:3;8845:67;:::i;:::-;8838:74;;8921:93;9010:3;8921:93;:::i;:::-;9039:2;9034:3;9030:12;9023:19;;8682:366;;;:::o;9054:419::-;9220:4;9258:2;9247:9;9243:18;9235:26;;9307:9;9301:4;9297:20;9293:1;9282:9;9278:17;9271:47;9335:131;9461:4;9335:131;:::i;:::-;9327:139;;9054:419;;;:::o;9479:175::-;9619:27;9615:1;9607:6;9603:14;9596:51;9479:175;:::o;9660:366::-;9802:3;9823:67;9887:2;9882:3;9823:67;:::i;:::-;9816:74;;9899:93;9988:3;9899:93;:::i;:::-;10017:2;10012:3;10008:12;10001:19;;9660:366;;;:::o;10032:419::-;10198:4;10236:2;10225:9;10221:18;10213:26;;10285:9;10279:4;10275:20;10271:1;10260:9;10256:17;10249:47;10313:131;10439:4;10313:131;:::i;:::-;10305:139;;10032:419;;;:::o;10457:351::-;10527:6;10576:2;10564:9;10555:7;10551:23;10547:32;10544:119;;;10582:79;;:::i;:::-;10544:119;10702:1;10727:64;10783:7;10774:6;10763:9;10759:22;10727:64;:::i;:::-;10717:74;;10673:128;10457:351;;;;:::o;10814:166::-;10954:18;10950:1;10942:6;10938:14;10931:42;10814:166;:::o;10986:366::-;11128:3;11149:67;11213:2;11208:3;11149:67;:::i;:::-;11142:74;;11225:93;11314:3;11225:93;:::i;:::-;11343:2;11338:3;11334:12;11327:19;;10986:366;;;:::o;11358:419::-;11524:4;11562:2;11551:9;11547:18;11539:26;;11611:9;11605:4;11601:20;11597:1;11586:9;11582:17;11575:47;11639:131;11765:4;11639:131;:::i;:::-;11631:139;;11358:419;;;:::o;11783:116::-;11853:21;11868:5;11853:21;:::i;:::-;11846:5;11843:32;11833:60;;11889:1;11886;11879:12;11833:60;11783:116;:::o;11905:137::-;11959:5;11990:6;11984:13;11975:22;;12006:30;12030:5;12006:30;:::i;:::-;11905:137;;;;:::o;12048:345::-;12115:6;12164:2;12152:9;12143:7;12139:23;12135:32;12132:119;;;12170:79;;:::i;:::-;12132:119;12290:1;12315:61;12368:7;12359:6;12348:9;12344:22;12315:61;:::i;:::-;12305:71;;12261:125;12048:345;;;;:::o;12399:166::-;12539:18;12535:1;12527:6;12523:14;12516:42;12399:166;:::o;12571:366::-;12713:3;12734:67;12798:2;12793:3;12734:67;:::i;:::-;12727:74;;12810:93;12899:3;12810:93;:::i;:::-;12928:2;12923:3;12919:12;12912:19;;12571:366;;;:::o;12943:419::-;13109:4;13147:2;13136:9;13132:18;13124:26;;13196:9;13190:4;13186:20;13182:1;13171:9;13167:17;13160:47;13224:131;13350:4;13224:131;:::i;:::-;13216:139;;12943:419;;;:::o;13368:180::-;13416:77;13413:1;13406:88;13513:4;13510:1;13503:15;13537:4;13534:1;13527:15;13554:305;13594:3;13613:20;13631:1;13613:20;:::i;:::-;13608:25;;13647:20;13665:1;13647:20;:::i;:::-;13642:25;;13801:1;13733:66;13729:74;13726:1;13723:81;13720:107;;;13807:18;;:::i;:::-;13720:107;13851:1;13848;13844:9;13837:16;;13554:305;;;;:::o;13865:233::-;13904:3;13927:24;13945:5;13927:24;:::i;:::-;13918:33;;13973:66;13966:5;13963:77;13960:103;;;14043:18;;:::i;:::-;13960:103;14090:1;14083:5;14079:13;14072:20;;13865:233;;;:::o;14104:191::-;14144:4;14164:20;14182:1;14164:20;:::i;:::-;14159:25;;14198:20;14216:1;14198:20;:::i;:::-;14193:25;;14237:1;14234;14231:8;14228:34;;;14242:18;;:::i;:::-;14228:34;14287:1;14284;14280:9;14272:17;;14104:191;;;;:::o;14301:182::-;14441:34;14437:1;14429:6;14425:14;14418:58;14301:182;:::o;14489:366::-;14631:3;14652:67;14716:2;14711:3;14652:67;:::i;:::-;14645:74;;14728:93;14817:3;14728:93;:::i;:::-;14846:2;14841:3;14837:12;14830:19;;14489:366;;;:::o;14861:419::-;15027:4;15065:2;15054:9;15050:18;15042:26;;15114:9;15108:4;15104:20;15100:1;15089:9;15085:17;15078:47;15142:131;15268:4;15142:131;:::i;:::-;15134:139;;14861:419;;;:::o;15286:167::-;15426:19;15422:1;15414:6;15410:14;15403:43;15286:167;:::o;15459:366::-;15601:3;15622:67;15686:2;15681:3;15622:67;:::i;:::-;15615:74;;15698:93;15787:3;15698:93;:::i;:::-;15816:2;15811:3;15807:12;15800:19;;15459:366;;;:::o;15831:419::-;15997:4;16035:2;16024:9;16020:18;16012:26;;16084:9;16078:4;16074:20;16070:1;16059:9;16055:17;16048:47;16112:131;16238:4;16112:131;:::i;:::-;16104:139;;15831:419;;;:::o;16256:180::-;16304:77;16301:1;16294:88;16401:4;16398:1;16391:15;16425:4;16422:1;16415:15;16442:163;16582:15;16578:1;16570:6;16566:14;16559:39;16442:163;:::o;16611:366::-;16753:3;16774:67;16838:2;16833:3;16774:67;:::i;:::-;16767:74;;16850:93;16939:3;16850:93;:::i;:::-;16968:2;16963:3;16959:12;16952:19;;16611:366;;;:::o;16983:419::-;17149:4;17187:2;17176:9;17172:18;17164:26;;17236:9;17230:4;17226:20;17222:1;17211:9;17207:17;17200:47;17264:131;17390:4;17264:131;:::i;:::-;17256:139;;16983:419;;;:::o;17408:180::-;17456:77;17453:1;17446:88;17553:4;17550:1;17543:15;17577:4;17574:1;17567:15;17594:225;17734:34;17730:1;17722:6;17718:14;17711:58;17803:8;17798:2;17790:6;17786:15;17779:33;17594:225;:::o;17825:366::-;17967:3;17988:67;18052:2;18047:3;17988:67;:::i;:::-;17981:74;;18064:93;18153:3;18064:93;:::i;:::-;18182:2;18177:3;18173:12;18166:19;;17825:366;;;:::o;18197:419::-;18363:4;18401:2;18390:9;18386:18;18378:26;;18450:9;18444:4;18440:20;18436:1;18425:9;18421:17;18414:47;18478:131;18604:4;18478:131;:::i;:::-;18470:139;;18197:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * Interface for the FakeNFTMarketplace\n */\ninterface IPseudoNFTMarket {\n    /// @dev getPrice() returns the price of an NFT from the FakeNFTMarketplace\n    /// @return Returns the price in Wei for an NFT\n    function getPrice() external view returns (uint256);\n\n    /// @dev available() returns whether or not the given _tokenId has already been purchased\n    /// @return Returns a boolean value - true if available, false if not\n    function available(uint256 _tokenId) external view returns (bool);\n\n    /// @dev purchase() purchases an NFT from the FakeNFTMarketplace\n    /// @param _tokenId - the fake NFT tokenID to purchase\n    function buy(uint256 _tokenId) external payable;\n}\n\n/**\n * Minimal interface for CryptoDevsNFT containing only two functions\n * that we are interested in\n */\ninterface IFinxterNFT {\n    /// @dev walletOfOwner() returns the token IDs for a given owner\n    /// @return IDs of token as an array\n    function walletOfOwner(address _addr)\n        external\n        view\n        returns (uint256[] memory);\n}\n\ncontract FinxterDAO is Ownable {\n    IPseudoNFTMarket nftMarketplace;\n    IFinxterNFT finxterNFT;\n    // Create a struct named Proposal containing all relevant information\n    struct Proposal {\n        // nftTokenId - the tokenID of the NFT to purchase from PseudoNFTMarket if the proposal passes\n        uint256 nftTokenId;\n        // deadline - the UNIX timestamp until which this proposal is active. Proposal can be executed after the deadline has been exceeded.\n        uint256 deadline;\n        // yayVotes - number of yay votes for this proposal\n        uint256 yayVotes;\n        // nayVotes - number of nay votes for this proposal\n        uint256 nayVotes;\n        // executed - whether or not this proposal has been executed yet. Cannot be executed before the deadline has been exceeded.\n        bool executed;\n        // voters - a mapping of Finxter tokenIDs to booleans indicating whether that NFT has already been used to cast a vote or not\n        mapping(uint256 => bool) voters;\n    }\n\n    // Create an enum named Vote containing possible options for a vote\n    enum Vote {\n        YAY,\n        NAY\n    }\n    // Create a mapping of ID to Proposal\n    mapping(uint256 => Proposal) public proposals;\n    // Number of proposals that have been created\n    uint256 public numProposals;\n\n    // Create a modifier which only allows a function to be\n    // called by someone who owns at least 1 finxterNFT token\n    // walletofOwner gives the token Ids and it must be > 0\n    modifier nftHolderOnly() {\n        uint256[] memory nfttokens = finxterNFT.walletOfOwner(msg.sender);\n        require(nfttokens.length > 0, \"NOT_A_DAO_MEMBER\");\n        _;\n    }\n\n    // Create a modifier which only allows a function to be\n    // called if the given proposal's deadline has not been exceeded yet\n    // You must vote before the deadline\n    modifier activeProposalOnly(uint256 proposalIndex) {\n        require(\n            proposals[proposalIndex].deadline > block.timestamp,\n            \"DEADLINE_EXCEEDED\"\n        );\n        _;\n    }\n\n    // Create a modifier which only allows a function to be\n    // called if the given proposals' deadline HAS been exceeded\n    // and if the proposal has not yet been executed\n    // Basically you can execute only after a certain deadline\n    modifier inactiveProposalOnly(uint256 proposalIndex) {\n        require(\n            proposals[proposalIndex].deadline <= block.timestamp,\n            \"DEADLINE_NOT_EXCEEDED\"\n        );\n        require(\n            proposals[proposalIndex].executed == false,\n            \"PROPOSAL_ALREADY_EXECUTED\"\n        );\n        _;\n    }\n\n    // Create a payable constructor which initializes the contract\n    // instances for PseudoNFTMarket and finxterNFT\n    // The payable allows this constructor to accept an ETH deposit when it is being deployed\n    constructor(address _nftMarketplace, address _finxterNFT) payable {\n        nftMarketplace = IPseudoNFTMarket(_nftMarketplace); // instance of pseudoNFT marketplace\n        finxterNFT = IFinxterNFT(_finxterNFT); // instance of Finxter NFT contract\n    }\n\n    /// @dev createProposal allows a FinxterNFT holder to create a new proposal in the DAO\n    /// @param _nftTokenId - the tokenID of the NFT to be purchased from PseudoNFTMarketplace if this proposal passes\n    /// @return Returns the proposal index for the newly created proposal\n    function createProposal(uint256 _nftTokenId)\n        external\n        nftHolderOnly\n        returns (uint256)\n    {\n        require(nftMarketplace.available(_nftTokenId), \"NFT_NOT_FOR_SALE\");\n        Proposal storage proposal = proposals[numProposals];\n        proposal.nftTokenId = _nftTokenId;\n        // Set the proposal's voting deadline to be (current time + 5 minutes)\n        proposal.deadline = block.timestamp + 5 minutes;\n\n        numProposals++;\n\n        return numProposals - 1;\n    }\n\n    /// @dev voteOnProposal allows a FinxterNFT holder to cast their vote on an active proposal\n    /// @param proposalIndex - the index of the proposal to vote on in the proposals array\n    /// @param vote - the type of vote they want to cast\n    function voteOnProposal(uint256 proposalIndex, Vote vote)\n        external\n        nftHolderOnly\n        activeProposalOnly(proposalIndex)\n    {\n        Proposal storage proposal = proposals[proposalIndex];\n\n        // get list of token Ids owned by the msg.sender\n        uint256[] memory nfttokens = finxterNFT.walletOfOwner(msg.sender);\n        uint256 numVotes = 0;\n\n        // Calculate how many NFTs are owned by the voter\n        // that haven't already been used for voting on this proposal\n        for (uint256 i = 0; i < nfttokens.length; i++) {\n            uint256 tokenId = nfttokens[i];\n            if (proposal.voters[tokenId] == false) {\n                numVotes++;\n                proposal.voters[tokenId] = true;\n                break;\n            }\n        }\n        require(numVotes > 0, \"ALREADY_VOTED\"); // if it is = 0, all nfts have been used for voting\n\n        if (vote == Vote.YAY) {\n            proposal.yayVotes += numVotes;\n        } else {\n            proposal.nayVotes += numVotes;\n        }\n    }\n\n    /// @dev executeProposal allows any FinxterNFT holder to execute a proposal after it's deadline has been exceeded\n    /// @param proposalIndex - the index of the proposal to execute in the proposals array\n    function executeProposal(uint256 proposalIndex)\n        external\n        nftHolderOnly\n        inactiveProposalOnly(proposalIndex)\n    {\n        Proposal storage proposal = proposals[proposalIndex];\n\n        // If the proposal has more YAY votes than NAY votes\n        // purchase the NFT from the PseudoNFTMarketplace\n        if (proposal.yayVotes > proposal.nayVotes) {\n            uint256 nftPrice = nftMarketplace.getPrice();\n            require(address(this).balance >= nftPrice, \"NOT_ENOUGH_FUNDS\");\n            nftMarketplace.buy{value: nftPrice}(proposal.nftTokenId);\n            proposal.executed = true;\n        }\n    }\n\n    /// @dev withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract\n    function withdrawEther() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    // The following two functions allow the contract to accept ETH deposits\n    // directly from a wallet without calling a function\n    receive() external payable {}\n\n    fallback() external payable {}\n}\n",
  "sourcePath": "/home/yogi/MEGAsync Downloads/EatTheBlocks-Dapp30/Blockchain/dapps/nft_dao/contracts/FinxterDAO.sol",
  "ast": {
    "absolutePath": "project:/contracts/FinxterDAO.sol",
    "exportedSymbols": {
      "Context": [
        126
      ],
      "FinxterDAO": [
        519
      ],
      "IFinxterNFT": [
        162
      ],
      "IPseudoNFTMarket": [
        151
      ],
      "Ownable": [
        104
      ]
    },
    "id": 520,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 128,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 129,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 520,
        "sourceUnit": 105,
        "src": "57:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPseudoNFTMarket",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 130,
          "nodeType": "StructuredDocumentation",
          "src": "111:47:2",
          "text": " Interface for the FakeNFTMarketplace"
        },
        "fullyImplemented": false,
        "id": 151,
        "linearizedBaseContracts": [
          151
        ],
        "name": "IPseudoNFTMarket",
        "nameLocation": "169:16:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 131,
              "nodeType": "StructuredDocumentation",
              "src": "192:127:2",
              "text": "@dev getPrice() returns the price of an NFT from the FakeNFTMarketplace\n @return Returns the price in Wei for an NFT"
            },
            "functionSelector": "98d5fdca",
            "id": 136,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "333:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:2:2"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "367:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "366:9:2"
            },
            "scope": 151,
            "src": "324:52:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 137,
              "nodeType": "StructuredDocumentation",
              "src": "382:163:2",
              "text": "@dev available() returns whether or not the given _tokenId has already been purchased\n @return Returns a boolean value - true if available, false if not"
            },
            "functionSelector": "96e494e8",
            "id": 144,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "available",
            "nameLocation": "559:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "577:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "569:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "568:18:2"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "610:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:6:2"
            },
            "scope": 151,
            "src": "550:66:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 145,
              "nodeType": "StructuredDocumentation",
              "src": "622:123:2",
              "text": "@dev purchase() purchases an NFT from the FakeNFTMarketplace\n @param _tokenId - the fake NFT tokenID to purchase"
            },
            "functionSelector": "d96a094a",
            "id": 150,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nameLocation": "759:3:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "771:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "763:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "762:18:2"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:0:2"
            },
            "scope": 151,
            "src": "750:48:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 520,
        "src": "159:641:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IFinxterNFT",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 152,
          "nodeType": "StructuredDocumentation",
          "src": "802:105:2",
          "text": " Minimal interface for CryptoDevsNFT containing only two functions\n that we are interested in"
        },
        "fullyImplemented": false,
        "id": 162,
        "linearizedBaseContracts": [
          162
        ],
        "name": "IFinxterNFT",
        "nameLocation": "918:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 153,
              "nodeType": "StructuredDocumentation",
              "src": "936:105:2",
              "text": "@dev walletOfOwner() returns the token IDs for a given owner\n @return IDs of token as an array"
            },
            "functionSelector": "438b6300",
            "id": 161,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "walletOfOwner",
            "nameLocation": "1055:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1077:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1069:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1068:15:2"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1131:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 157,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1131:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 158,
                    "nodeType": "ArrayTypeName",
                    "src": "1131:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1130:18:2"
            },
            "scope": 162,
            "src": "1046:103:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 520,
        "src": "908:243:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 163,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "1176:7:2"
            },
            "id": 164,
            "nodeType": "InheritanceSpecifier",
            "src": "1176:7:2"
          }
        ],
        "canonicalName": "FinxterDAO",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 519,
        "linearizedBaseContracts": [
          519,
          104,
          126
        ],
        "name": "FinxterDAO",
        "nameLocation": "1162:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 167,
            "mutability": "mutable",
            "name": "nftMarketplace",
            "nameLocation": "1207:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 519,
            "src": "1190:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
              "typeString": "contract IPseudoNFTMarket"
            },
            "typeName": {
              "id": 166,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 165,
                "name": "IPseudoNFTMarket",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 151,
                "src": "1190:16:2"
              },
              "referencedDeclaration": 151,
              "src": "1190:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                "typeString": "contract IPseudoNFTMarket"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 170,
            "mutability": "mutable",
            "name": "finxterNFT",
            "nameLocation": "1239:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 519,
            "src": "1227:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFinxterNFT_$162",
              "typeString": "contract IFinxterNFT"
            },
            "typeName": {
              "id": 169,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 168,
                "name": "IFinxterNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 162,
                "src": "1227:11:2"
              },
              "referencedDeclaration": 162,
              "src": "1227:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                "typeString": "contract IFinxterNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "FinxterDAO.Proposal",
            "id": 185,
            "members": [
              {
                "constant": false,
                "id": 172,
                "mutability": "mutable",
                "name": "nftTokenId",
                "nameLocation": "1466:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1458:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 171,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1458:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 174,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "1635:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1627:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 173,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1627:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 176,
                "mutability": "mutable",
                "name": "yayVotes",
                "nameLocation": "1721:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1713:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 175,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1713:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 178,
                "mutability": "mutable",
                "name": "nayVotes",
                "nameLocation": "1807:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1799:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 177,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1799:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 180,
                "mutability": "mutable",
                "name": "executed",
                "nameLocation": "1962:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1957:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 179,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1957:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 184,
                "mutability": "mutable",
                "name": "voters",
                "nameLocation": "2139:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "2114:31:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "typeName": {
                  "id": 183,
                  "keyType": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2114:24:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "valueType": {
                    "id": 182,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "1336:8:2",
            "nodeType": "StructDefinition",
            "scope": 519,
            "src": "1329:823:2",
            "visibility": "public"
          },
          {
            "canonicalName": "FinxterDAO.Vote",
            "id": 188,
            "members": [
              {
                "id": 186,
                "name": "YAY",
                "nameLocation": "2250:3:2",
                "nodeType": "EnumValue",
                "src": "2250:3:2"
              },
              {
                "id": 187,
                "name": "NAY",
                "nameLocation": "2263:3:2",
                "nodeType": "EnumValue",
                "src": "2263:3:2"
              }
            ],
            "name": "Vote",
            "nameLocation": "2235:4:2",
            "nodeType": "EnumDefinition",
            "src": "2230:42:2"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 193,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2355:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 519,
            "src": "2319:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
              "typeString": "mapping(uint256 => struct FinxterDAO.Proposal)"
            },
            "typeName": {
              "id": 192,
              "keyType": {
                "id": 189,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2327:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2319:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                "typeString": "mapping(uint256 => struct FinxterDAO.Proposal)"
              },
              "valueType": {
                "id": 191,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 190,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 185,
                  "src": "2338:8:2"
                },
                "referencedDeclaration": 185,
                "src": "2338:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                  "typeString": "struct FinxterDAO.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "400e3949",
            "id": 195,
            "mutability": "mutable",
            "name": "numProposals",
            "nameLocation": "2435:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 519,
            "src": "2420:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 194,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2420:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "2661:152:2",
              "statements": [
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "nfttokens",
                      "nameLocation": "2688:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 217,
                      "src": "2671:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2671:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 200,
                        "nodeType": "ArrayTypeName",
                        "src": "2671:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 207,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2725:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2725:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "finxterNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "2700:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                          "typeString": "contract IFinxterNFT"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "walletOfOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 161,
                      "src": "2700:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (uint256[] memory)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2700:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2671:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 209,
                            "name": "nfttokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 201,
                            "src": "2754:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2754:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2773:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2754:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f545f415f44414f5f4d454d424552",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2776:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3",
                          "typeString": "literal_string \"NOT_A_DAO_MEMBER\""
                        },
                        "value": "NOT_A_DAO_MEMBER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3",
                          "typeString": "literal_string \"NOT_A_DAO_MEMBER\""
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2746:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2746:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2746:49:2"
                },
                {
                  "id": 216,
                  "nodeType": "PlaceholderStatement",
                  "src": "2805:1:2"
                }
              ]
            },
            "id": 218,
            "name": "nftHolderOnly",
            "nameLocation": "2645:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:2:2"
            },
            "src": "2636:177:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "3044:143:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 223,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "3075:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                                "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                              }
                            },
                            "id": 225,
                            "indexExpression": {
                              "id": 224,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 220,
                              "src": "3085:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3075:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$185_storage",
                              "typeString": "struct FinxterDAO.Proposal storage ref"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 174,
                          "src": "3075:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 227,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3111:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3111:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3075:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "444541444c494e455f4558434545444544",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3140:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd",
                          "typeString": "literal_string \"DEADLINE_EXCEEDED\""
                        },
                        "value": "DEADLINE_EXCEEDED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd",
                          "typeString": "literal_string \"DEADLINE_EXCEEDED\""
                        }
                      ],
                      "id": 222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3054:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3054:115:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3054:115:2"
                },
                {
                  "id": 233,
                  "nodeType": "PlaceholderStatement",
                  "src": "3179:1:2"
                }
              ]
            },
            "id": 235,
            "name": "activeProposalOnly",
            "nameLocation": "3002:18:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "proposalIndex",
                  "nameLocation": "3029:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "3021:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3021:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3020:23:2"
            },
            "src": "2993:194:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "3487:272:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 240,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "3518:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                                "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                              }
                            },
                            "id": 242,
                            "indexExpression": {
                              "id": 241,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "3528:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3518:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$185_storage",
                              "typeString": "struct FinxterDAO.Proposal storage ref"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 174,
                          "src": "3518:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 244,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3555:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3555:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3518:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "444541444c494e455f4e4f545f4558434545444544",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3584:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea",
                          "typeString": "literal_string \"DEADLINE_NOT_EXCEEDED\""
                        },
                        "value": "DEADLINE_NOT_EXCEEDED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea",
                          "typeString": "literal_string \"DEADLINE_NOT_EXCEEDED\""
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3497:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3497:120:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:120:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 251,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "3648:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                                "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                              }
                            },
                            "id": 253,
                            "indexExpression": {
                              "id": 252,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "3658:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3648:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$185_storage",
                              "typeString": "struct FinxterDAO.Proposal storage ref"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 180,
                          "src": "3648:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3685:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3648:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50524f504f53414c5f414c52454144595f4558454355544544",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3704:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4",
                          "typeString": "literal_string \"PROPOSAL_ALREADY_EXECUTED\""
                        },
                        "value": "PROPOSAL_ALREADY_EXECUTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4",
                          "typeString": "literal_string \"PROPOSAL_ALREADY_EXECUTED\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3627:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3627:114:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:114:2"
                },
                {
                  "id": 260,
                  "nodeType": "PlaceholderStatement",
                  "src": "3751:1:2"
                }
              ]
            },
            "id": 262,
            "name": "inactiveProposalOnly",
            "nameLocation": "3443:20:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "proposalIndex",
                  "nameLocation": "3472:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "3464:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3464:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3463:23:2"
            },
            "src": "3434:325:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "4044:187:2",
              "statements": [
                {
                  "expression": {
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 269,
                      "name": "nftMarketplace",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "4054:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                        "typeString": "contract IPseudoNFTMarket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 271,
                          "name": "_nftMarketplace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "4088:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 270,
                        "name": "IPseudoNFTMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "4071:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPseudoNFTMarket_$151_$",
                          "typeString": "type(contract IPseudoNFTMarket)"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4071:33:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                        "typeString": "contract IPseudoNFTMarket"
                      }
                    },
                    "src": "4054:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                      "typeString": "contract IPseudoNFTMarket"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "4054:50:2"
                },
                {
                  "expression": {
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 275,
                      "name": "finxterNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "4151:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                        "typeString": "contract IFinxterNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 277,
                          "name": "_finxterNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "4176:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 276,
                        "name": "IFinxterNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "4164:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFinxterNFT_$162_$",
                          "typeString": "type(contract IFinxterNFT)"
                        }
                      },
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4164:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                        "typeString": "contract IFinxterNFT"
                      }
                    },
                    "src": "4151:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                      "typeString": "contract IFinxterNFT"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "4151:37:2"
                }
              ]
            },
            "id": 282,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "_nftMarketplace",
                  "nameLocation": "3998:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3990:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3990:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "_finxterNFT",
                  "nameLocation": "4023:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "4015:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4015:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3989:46:2"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4044:0:2"
            },
            "scope": 519,
            "src": "3978:253:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "4634:382:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 295,
                            "name": "_nftTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "4677:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 293,
                            "name": "nftMarketplace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "4652:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                              "typeString": "contract IPseudoNFTMarket"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "available",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 144,
                          "src": "4652:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4652:37:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46545f4e4f545f464f525f53414c45",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4691:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247",
                          "typeString": "literal_string \"NFT_NOT_FOR_SALE\""
                        },
                        "value": "NFT_NOT_FOR_SALE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247",
                          "typeString": "literal_string \"NFT_NOT_FOR_SALE\""
                        }
                      ],
                      "id": 292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4644:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4644:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4644:66:2"
                },
                {
                  "assignments": [
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "4737:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "4720:25:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                        "typeString": "struct FinxterDAO.Proposal"
                      },
                      "typeName": {
                        "id": 301,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 300,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 185,
                          "src": "4720:8:2"
                        },
                        "referencedDeclaration": 185,
                        "src": "4720:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 306,
                  "initialValue": {
                    "baseExpression": {
                      "id": 303,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "4748:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                        "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                      }
                    },
                    "id": 305,
                    "indexExpression": {
                      "id": 304,
                      "name": "numProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "4758:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4748:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$185_storage",
                      "typeString": "struct FinxterDAO.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4720:51:2"
                },
                {
                  "expression": {
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 307,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "4781:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal storage pointer"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nftTokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 172,
                      "src": "4781:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 310,
                      "name": "_nftTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "4803:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4781:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "4781:33:2"
                },
                {
                  "expression": {
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 313,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "4903:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal storage pointer"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "4903:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 316,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4923:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4923:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4941:9:2",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "5"
                      },
                      "src": "4923:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4903:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "4903:47:2"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4961:14:2",
                    "subExpression": {
                      "id": 322,
                      "name": "numProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "4961:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "4961:14:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 325,
                      "name": "numProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "4993:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5008:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4993:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 291,
                  "id": 328,
                  "nodeType": "Return",
                  "src": "4986:23:2"
                }
              ]
            },
            "documentation": {
              "id": 283,
              "nodeType": "StructuredDocumentation",
              "src": "4237:278:2",
              "text": "@dev createProposal allows a FinxterNFT holder to create a new proposal in the DAO\n @param _nftTokenId - the tokenID of the NFT to be purchased from PseudoNFTMarketplace if this proposal passes\n @return Returns the proposal index for the newly created proposal"
            },
            "functionSelector": "5a43dc00",
            "id": 330,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 288,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 287,
                  "name": "nftHolderOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 218,
                  "src": "4590:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4590:13:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "4529:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "_nftTokenId",
                  "nameLocation": "4552:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "4544:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4544:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4543:21:2"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "4621:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4621:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4620:9:2"
            },
            "scope": 519,
            "src": "4520:496:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "5409:885:2",
              "statements": [
                {
                  "assignments": [
                    346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 346,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "5436:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "5419:25:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                        "typeString": "struct FinxterDAO.Proposal"
                      },
                      "typeName": {
                        "id": 345,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 344,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 185,
                          "src": "5419:8:2"
                        },
                        "referencedDeclaration": 185,
                        "src": "5419:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "initialValue": {
                    "baseExpression": {
                      "id": 347,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "5447:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                        "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                      }
                    },
                    "id": 349,
                    "indexExpression": {
                      "id": 348,
                      "name": "proposalIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "5457:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5447:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$185_storage",
                      "typeString": "struct FinxterDAO.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5419:52:2"
                },
                {
                  "assignments": [
                    355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 355,
                      "mutability": "mutable",
                      "name": "nfttokens",
                      "nameLocation": "5556:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "5539:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 353,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5539:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 354,
                        "nodeType": "ArrayTypeName",
                        "src": "5539:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5593:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5593:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 356,
                        "name": "finxterNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "5568:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                          "typeString": "contract IFinxterNFT"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "walletOfOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 161,
                      "src": "5568:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (uint256[] memory)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5568:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5539:65:2"
                },
                {
                  "assignments": [
                    363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 363,
                      "mutability": "mutable",
                      "name": "numVotes",
                      "nameLocation": "5622:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "5614:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 362,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5614:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 365,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5633:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5614:20:2"
                },
                {
                  "body": {
                    "id": 403,
                    "nodeType": "Block",
                    "src": "5820:222:2",
                    "statements": [
                      {
                        "assignments": [
                          378
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 378,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "5842:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 403,
                            "src": "5834:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 377,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5834:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 382,
                        "initialValue": {
                          "baseExpression": {
                            "id": 379,
                            "name": "nfttokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "5852:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 381,
                          "indexExpression": {
                            "id": 380,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 367,
                            "src": "5862:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5852:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5834:30:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 383,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 346,
                                "src": "5882:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                  "typeString": "struct FinxterDAO.Proposal storage pointer"
                                }
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "voters",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 184,
                              "src": "5882:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 386,
                            "indexExpression": {
                              "id": 385,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "5898:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5882:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5910:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "5882:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 402,
                        "nodeType": "IfStatement",
                        "src": "5878:154:2",
                        "trueBody": {
                          "id": 401,
                          "nodeType": "Block",
                          "src": "5917:115:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "5935:10:2",
                                "subExpression": {
                                  "id": 389,
                                  "name": "numVotes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 363,
                                  "src": "5935:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 391,
                              "nodeType": "ExpressionStatement",
                              "src": "5935:10:2"
                            },
                            {
                              "expression": {
                                "id": 398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 392,
                                      "name": "proposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 346,
                                      "src": "5963:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                        "typeString": "struct FinxterDAO.Proposal storage pointer"
                                      }
                                    },
                                    "id": 395,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "voters",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 184,
                                    "src": "5963:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                      "typeString": "mapping(uint256 => bool)"
                                    }
                                  },
                                  "id": 396,
                                  "indexExpression": {
                                    "id": 394,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "5979:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5963:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 397,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5990:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5963:31:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 399,
                              "nodeType": "ExpressionStatement",
                              "src": "5963:31:2"
                            },
                            {
                              "id": 400,
                              "nodeType": "Break",
                              "src": "6012:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 370,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "5793:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 371,
                        "name": "nfttokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "5797:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5797:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5793:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 404,
                  "initializationExpression": {
                    "assignments": [
                      367
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5786:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 404,
                        "src": "5778:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5778:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 369,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5790:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5778:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5815:3:2",
                      "subExpression": {
                        "id": 374,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "5815:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 376,
                    "nodeType": "ExpressionStatement",
                    "src": "5815:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5773:269:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 406,
                          "name": "numVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "6059:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6070:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6059:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414c52454144595f564f544544",
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6073:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80",
                          "typeString": "literal_string \"ALREADY_VOTED\""
                        },
                        "value": "ALREADY_VOTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80",
                          "typeString": "literal_string \"ALREADY_VOTED\""
                        }
                      ],
                      "id": 405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6051:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6051:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "6051:38:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Vote_$188",
                      "typeString": "enum FinxterDAO.Vote"
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 412,
                      "name": "vote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "6156:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Vote_$188",
                        "typeString": "enum FinxterDAO.Vote"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 413,
                        "name": "Vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "6164:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Vote_$188_$",
                          "typeString": "type(enum FinxterDAO.Vote)"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "YAY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "6164:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Vote_$188",
                        "typeString": "enum FinxterDAO.Vote"
                      }
                    },
                    "src": "6156:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 429,
                    "nodeType": "Block",
                    "src": "6234:54:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 423,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 346,
                              "src": "6248:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                "typeString": "struct FinxterDAO.Proposal storage pointer"
                              }
                            },
                            "id": 425,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nayVotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 178,
                            "src": "6248:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 426,
                            "name": "numVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "6269:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6248:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 428,
                        "nodeType": "ExpressionStatement",
                        "src": "6248:29:2"
                      }
                    ]
                  },
                  "id": 430,
                  "nodeType": "IfStatement",
                  "src": "6152:136:2",
                  "trueBody": {
                    "id": 422,
                    "nodeType": "Block",
                    "src": "6174:54:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 416,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 346,
                              "src": "6188:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                "typeString": "struct FinxterDAO.Proposal storage pointer"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "yayVotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 176,
                            "src": "6188:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 419,
                            "name": "numVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "6209:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6188:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 421,
                        "nodeType": "ExpressionStatement",
                        "src": "6188:29:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 331,
              "nodeType": "StructuredDocumentation",
              "src": "5022:239:2",
              "text": "@dev voteOnProposal allows a FinxterNFT holder to cast their vote on an active proposal\n @param proposalIndex - the index of the proposal to vote on in the proposals array\n @param vote - the type of vote they want to cast"
            },
            "functionSelector": "efafb22e",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 339,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 338,
                  "name": "nftHolderOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 218,
                  "src": "5349:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5349:13:2"
              },
              {
                "arguments": [
                  {
                    "id": 341,
                    "name": "proposalIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 333,
                    "src": "5390:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 342,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 340,
                  "name": "activeProposalOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 235,
                  "src": "5371:18:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5371:33:2"
              }
            ],
            "name": "voteOnProposal",
            "nameLocation": "5275:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "proposalIndex",
                  "nameLocation": "5298:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "5290:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5290:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "vote",
                  "nameLocation": "5318:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "5313:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Vote_$188",
                    "typeString": "enum FinxterDAO.Vote"
                  },
                  "typeName": {
                    "id": 335,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 334,
                      "name": "Vote",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 188,
                      "src": "5313:4:2"
                    },
                    "referencedDeclaration": 188,
                    "src": "5313:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Vote_$188",
                      "typeString": "enum FinxterDAO.Vote"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5289:34:2"
            },
            "returnParameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5409:0:2"
            },
            "scope": 519,
            "src": "5266:1028:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 489,
              "nodeType": "Block",
              "src": "6644:494:2",
              "statements": [
                {
                  "assignments": [
                    445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 445,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "6671:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 489,
                      "src": "6654:25:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                        "typeString": "struct FinxterDAO.Proposal"
                      },
                      "typeName": {
                        "id": 444,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 443,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 185,
                          "src": "6654:8:2"
                        },
                        "referencedDeclaration": 185,
                        "src": "6654:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 449,
                  "initialValue": {
                    "baseExpression": {
                      "id": 446,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "6682:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                        "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                      }
                    },
                    "id": 448,
                    "indexExpression": {
                      "id": 447,
                      "name": "proposalIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "6692:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6682:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$185_storage",
                      "typeString": "struct FinxterDAO.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6654:52:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 450,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "6840:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal storage pointer"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "yayVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 176,
                      "src": "6840:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 452,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "6860:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal storage pointer"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nayVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 178,
                      "src": "6860:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6840:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 488,
                  "nodeType": "IfStatement",
                  "src": "6836:296:2",
                  "trueBody": {
                    "id": 487,
                    "nodeType": "Block",
                    "src": "6879:253:2",
                    "statements": [
                      {
                        "assignments": [
                          456
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 456,
                            "mutability": "mutable",
                            "name": "nftPrice",
                            "nameLocation": "6901:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 487,
                            "src": "6893:16:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 455,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6893:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 460,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 457,
                              "name": "nftMarketplace",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "6912:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                                "typeString": "contract IPseudoNFTMarket"
                              }
                            },
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 136,
                            "src": "6912:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6912:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6893:44:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 464,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "6967:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_FinxterDAO_$519",
                                        "typeString": "contract FinxterDAO"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_FinxterDAO_$519",
                                        "typeString": "contract FinxterDAO"
                                      }
                                    ],
                                    "id": 463,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6959:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 462,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6959:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 465,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6959:13:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "6959:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 467,
                                "name": "nftPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 456,
                                "src": "6984:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6959:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e4f545f454e4f5547485f46554e4453",
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6994:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b",
                                "typeString": "literal_string \"NOT_ENOUGH_FUNDS\""
                              },
                              "value": "NOT_ENOUGH_FUNDS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b",
                                "typeString": "literal_string \"NOT_ENOUGH_FUNDS\""
                              }
                            ],
                            "id": 461,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6951:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6951:62:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 471,
                        "nodeType": "ExpressionStatement",
                        "src": "6951:62:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 477,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 445,
                                "src": "7063:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                  "typeString": "struct FinxterDAO.Proposal storage pointer"
                                }
                              },
                              "id": 478,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nftTokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 172,
                              "src": "7063:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 472,
                                "name": "nftMarketplace",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "7027:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                                  "typeString": "contract IPseudoNFTMarket"
                                }
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buy",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 150,
                              "src": "7027:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 475,
                                "name": "nftPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 456,
                                "src": "7053:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "7027:35:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7027:56:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 480,
                        "nodeType": "ExpressionStatement",
                        "src": "7027:56:2"
                      },
                      {
                        "expression": {
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 481,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 445,
                              "src": "7097:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                "typeString": "struct FinxterDAO.Proposal storage pointer"
                              }
                            },
                            "id": 483,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 180,
                            "src": "7097:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7117:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7097:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 486,
                        "nodeType": "ExpressionStatement",
                        "src": "7097:24:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 433,
              "nodeType": "StructuredDocumentation",
              "src": "6300:204:2",
              "text": "@dev executeProposal allows any FinxterNFT holder to execute a proposal after it's deadline has been exceeded\n @param proposalIndex - the index of the proposal to execute in the proposals array"
            },
            "functionSelector": "0d61b519",
            "id": 490,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 438,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 437,
                  "name": "nftHolderOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 218,
                  "src": "6582:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6582:13:2"
              },
              {
                "arguments": [
                  {
                    "id": 440,
                    "name": "proposalIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 435,
                    "src": "6625:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 441,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 439,
                  "name": "inactiveProposalOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 262,
                  "src": "6604:20:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6604:35:2"
              }
            ],
            "name": "executeProposal",
            "nameLocation": "6518:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "proposalIndex",
                  "nameLocation": "6542:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 490,
                  "src": "6534:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6534:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6533:23:2"
            },
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6644:0:2"
            },
            "scope": 519,
            "src": "6509:629:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 509,
              "nodeType": "Block",
              "src": "7290:65:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 504,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "7334:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FinxterDAO_$519",
                                "typeString": "contract FinxterDAO"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FinxterDAO_$519",
                                "typeString": "contract FinxterDAO"
                              }
                            ],
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7326:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 502,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7326:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7326:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "7326:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 498,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "7308:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7308:7:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7300:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 496,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7300:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7300:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7300:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7300:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "7300:48:2"
                }
              ]
            },
            "documentation": {
              "id": 491,
              "nodeType": "StructuredDocumentation",
              "src": "7144:97:2",
              "text": "@dev withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract"
            },
            "functionSelector": "7362377b",
            "id": 510,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 494,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 493,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "7280:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7280:9:2"
              }
            ],
            "name": "withdrawEther",
            "nameLocation": "7255:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7268:2:2"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7290:0:2"
            },
            "scope": 519,
            "src": "7246:109:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "7522:2:2",
              "statements": []
            },
            "id": 514,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7502:2:2"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7522:0:2"
            },
            "scope": 519,
            "src": "7495:29:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 517,
              "nodeType": "Block",
              "src": "7558:2:2",
              "statements": []
            },
            "id": 518,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7538:2:2"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7558:0:2"
            },
            "scope": 519,
            "src": "7530:30:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 520,
        "src": "1153:6409:2",
        "usedErrors": []
      }
    ],
    "src": "32:7531:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/FinxterDAO.sol",
    "exportedSymbols": {
      "Context": [
        126
      ],
      "FinxterDAO": [
        519
      ],
      "IFinxterNFT": [
        162
      ],
      "IPseudoNFTMarket": [
        151
      ],
      "Ownable": [
        104
      ]
    },
    "id": 520,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 128,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 129,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 520,
        "sourceUnit": 105,
        "src": "57:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPseudoNFTMarket",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 130,
          "nodeType": "StructuredDocumentation",
          "src": "111:47:2",
          "text": " Interface for the FakeNFTMarketplace"
        },
        "fullyImplemented": false,
        "id": 151,
        "linearizedBaseContracts": [
          151
        ],
        "name": "IPseudoNFTMarket",
        "nameLocation": "169:16:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 131,
              "nodeType": "StructuredDocumentation",
              "src": "192:127:2",
              "text": "@dev getPrice() returns the price of an NFT from the FakeNFTMarketplace\n @return Returns the price in Wei for an NFT"
            },
            "functionSelector": "98d5fdca",
            "id": 136,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "333:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:2:2"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "367:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "366:9:2"
            },
            "scope": 151,
            "src": "324:52:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 137,
              "nodeType": "StructuredDocumentation",
              "src": "382:163:2",
              "text": "@dev available() returns whether or not the given _tokenId has already been purchased\n @return Returns a boolean value - true if available, false if not"
            },
            "functionSelector": "96e494e8",
            "id": 144,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "available",
            "nameLocation": "559:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "577:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "569:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "568:18:2"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "610:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:6:2"
            },
            "scope": 151,
            "src": "550:66:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 145,
              "nodeType": "StructuredDocumentation",
              "src": "622:123:2",
              "text": "@dev purchase() purchases an NFT from the FakeNFTMarketplace\n @param _tokenId - the fake NFT tokenID to purchase"
            },
            "functionSelector": "d96a094a",
            "id": 150,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nameLocation": "759:3:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "771:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "763:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "762:18:2"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:0:2"
            },
            "scope": 151,
            "src": "750:48:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 520,
        "src": "159:641:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IFinxterNFT",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 152,
          "nodeType": "StructuredDocumentation",
          "src": "802:105:2",
          "text": " Minimal interface for CryptoDevsNFT containing only two functions\n that we are interested in"
        },
        "fullyImplemented": false,
        "id": 162,
        "linearizedBaseContracts": [
          162
        ],
        "name": "IFinxterNFT",
        "nameLocation": "918:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 153,
              "nodeType": "StructuredDocumentation",
              "src": "936:105:2",
              "text": "@dev walletOfOwner() returns the token IDs for a given owner\n @return IDs of token as an array"
            },
            "functionSelector": "438b6300",
            "id": 161,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "walletOfOwner",
            "nameLocation": "1055:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1077:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1069:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1068:15:2"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1131:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 157,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1131:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 158,
                    "nodeType": "ArrayTypeName",
                    "src": "1131:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1130:18:2"
            },
            "scope": 162,
            "src": "1046:103:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 520,
        "src": "908:243:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 163,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "1176:7:2"
            },
            "id": 164,
            "nodeType": "InheritanceSpecifier",
            "src": "1176:7:2"
          }
        ],
        "canonicalName": "FinxterDAO",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 519,
        "linearizedBaseContracts": [
          519,
          104,
          126
        ],
        "name": "FinxterDAO",
        "nameLocation": "1162:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 167,
            "mutability": "mutable",
            "name": "nftMarketplace",
            "nameLocation": "1207:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 519,
            "src": "1190:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
              "typeString": "contract IPseudoNFTMarket"
            },
            "typeName": {
              "id": 166,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 165,
                "name": "IPseudoNFTMarket",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 151,
                "src": "1190:16:2"
              },
              "referencedDeclaration": 151,
              "src": "1190:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                "typeString": "contract IPseudoNFTMarket"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 170,
            "mutability": "mutable",
            "name": "finxterNFT",
            "nameLocation": "1239:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 519,
            "src": "1227:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFinxterNFT_$162",
              "typeString": "contract IFinxterNFT"
            },
            "typeName": {
              "id": 169,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 168,
                "name": "IFinxterNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 162,
                "src": "1227:11:2"
              },
              "referencedDeclaration": 162,
              "src": "1227:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                "typeString": "contract IFinxterNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "FinxterDAO.Proposal",
            "id": 185,
            "members": [
              {
                "constant": false,
                "id": 172,
                "mutability": "mutable",
                "name": "nftTokenId",
                "nameLocation": "1466:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1458:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 171,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1458:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 174,
                "mutability": "mutable",
                "name": "deadline",
                "nameLocation": "1635:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1627:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 173,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1627:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 176,
                "mutability": "mutable",
                "name": "yayVotes",
                "nameLocation": "1721:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1713:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 175,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1713:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 178,
                "mutability": "mutable",
                "name": "nayVotes",
                "nameLocation": "1807:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1799:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 177,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1799:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 180,
                "mutability": "mutable",
                "name": "executed",
                "nameLocation": "1962:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1957:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 179,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1957:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 184,
                "mutability": "mutable",
                "name": "voters",
                "nameLocation": "2139:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "2114:31:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "typeName": {
                  "id": 183,
                  "keyType": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2114:24:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "valueType": {
                    "id": 182,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "1336:8:2",
            "nodeType": "StructDefinition",
            "scope": 519,
            "src": "1329:823:2",
            "visibility": "public"
          },
          {
            "canonicalName": "FinxterDAO.Vote",
            "id": 188,
            "members": [
              {
                "id": 186,
                "name": "YAY",
                "nameLocation": "2250:3:2",
                "nodeType": "EnumValue",
                "src": "2250:3:2"
              },
              {
                "id": 187,
                "name": "NAY",
                "nameLocation": "2263:3:2",
                "nodeType": "EnumValue",
                "src": "2263:3:2"
              }
            ],
            "name": "Vote",
            "nameLocation": "2235:4:2",
            "nodeType": "EnumDefinition",
            "src": "2230:42:2"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 193,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2355:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 519,
            "src": "2319:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
              "typeString": "mapping(uint256 => struct FinxterDAO.Proposal)"
            },
            "typeName": {
              "id": 192,
              "keyType": {
                "id": 189,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2327:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2319:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                "typeString": "mapping(uint256 => struct FinxterDAO.Proposal)"
              },
              "valueType": {
                "id": 191,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 190,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 185,
                  "src": "2338:8:2"
                },
                "referencedDeclaration": 185,
                "src": "2338:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                  "typeString": "struct FinxterDAO.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "400e3949",
            "id": 195,
            "mutability": "mutable",
            "name": "numProposals",
            "nameLocation": "2435:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 519,
            "src": "2420:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 194,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2420:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "2661:152:2",
              "statements": [
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "nfttokens",
                      "nameLocation": "2688:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 217,
                      "src": "2671:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2671:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 200,
                        "nodeType": "ArrayTypeName",
                        "src": "2671:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 207,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 204,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2725:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2725:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "finxterNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "2700:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                          "typeString": "contract IFinxterNFT"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "walletOfOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 161,
                      "src": "2700:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (uint256[] memory)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2700:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2671:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 209,
                            "name": "nfttokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 201,
                            "src": "2754:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2754:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2773:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2754:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f545f415f44414f5f4d454d424552",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2776:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3",
                          "typeString": "literal_string \"NOT_A_DAO_MEMBER\""
                        },
                        "value": "NOT_A_DAO_MEMBER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_887c47c45477bf97814b2126c7dce150c4c1302f886016ae67c7a3b2406655b3",
                          "typeString": "literal_string \"NOT_A_DAO_MEMBER\""
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2746:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2746:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2746:49:2"
                },
                {
                  "id": 216,
                  "nodeType": "PlaceholderStatement",
                  "src": "2805:1:2"
                }
              ]
            },
            "id": 218,
            "name": "nftHolderOnly",
            "nameLocation": "2645:13:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:2:2"
            },
            "src": "2636:177:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "3044:143:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 223,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "3075:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                                "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                              }
                            },
                            "id": 225,
                            "indexExpression": {
                              "id": 224,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 220,
                              "src": "3085:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3075:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$185_storage",
                              "typeString": "struct FinxterDAO.Proposal storage ref"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 174,
                          "src": "3075:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 227,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3111:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3111:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3075:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "444541444c494e455f4558434545444544",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3140:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd",
                          "typeString": "literal_string \"DEADLINE_EXCEEDED\""
                        },
                        "value": "DEADLINE_EXCEEDED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c76c2cf3644524c3d1cd75aafff71d32e89470769a71a66f3db022e42fed1dd",
                          "typeString": "literal_string \"DEADLINE_EXCEEDED\""
                        }
                      ],
                      "id": 222,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3054:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3054:115:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3054:115:2"
                },
                {
                  "id": 233,
                  "nodeType": "PlaceholderStatement",
                  "src": "3179:1:2"
                }
              ]
            },
            "id": 235,
            "name": "activeProposalOnly",
            "nameLocation": "3002:18:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "proposalIndex",
                  "nameLocation": "3029:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "3021:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3021:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3020:23:2"
            },
            "src": "2993:194:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "3487:272:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 240,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "3518:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                                "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                              }
                            },
                            "id": 242,
                            "indexExpression": {
                              "id": 241,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "3528:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3518:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$185_storage",
                              "typeString": "struct FinxterDAO.Proposal storage ref"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deadline",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 174,
                          "src": "3518:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 244,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "3555:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3555:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3518:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "444541444c494e455f4e4f545f4558434545444544",
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3584:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea",
                          "typeString": "literal_string \"DEADLINE_NOT_EXCEEDED\""
                        },
                        "value": "DEADLINE_NOT_EXCEEDED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09a3049d0639143a78af3bb0c4280b5a38d98cc6d35c85ad9a2310d463dd73ea",
                          "typeString": "literal_string \"DEADLINE_NOT_EXCEEDED\""
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3497:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3497:120:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:120:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 251,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "3648:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                                "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                              }
                            },
                            "id": 253,
                            "indexExpression": {
                              "id": 252,
                              "name": "proposalIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "3658:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3648:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$185_storage",
                              "typeString": "struct FinxterDAO.Proposal storage ref"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 180,
                          "src": "3648:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3685:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3648:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50524f504f53414c5f414c52454144595f4558454355544544",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3704:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4",
                          "typeString": "literal_string \"PROPOSAL_ALREADY_EXECUTED\""
                        },
                        "value": "PROPOSAL_ALREADY_EXECUTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34b823a030c8b59c76896a499464009e42a3228d7d206b151a6eb56f1ef4d0a4",
                          "typeString": "literal_string \"PROPOSAL_ALREADY_EXECUTED\""
                        }
                      ],
                      "id": 250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3627:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3627:114:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:114:2"
                },
                {
                  "id": 260,
                  "nodeType": "PlaceholderStatement",
                  "src": "3751:1:2"
                }
              ]
            },
            "id": 262,
            "name": "inactiveProposalOnly",
            "nameLocation": "3443:20:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "proposalIndex",
                  "nameLocation": "3472:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "3464:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3464:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3463:23:2"
            },
            "src": "3434:325:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "4044:187:2",
              "statements": [
                {
                  "expression": {
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 269,
                      "name": "nftMarketplace",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "4054:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                        "typeString": "contract IPseudoNFTMarket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 271,
                          "name": "_nftMarketplace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "4088:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 270,
                        "name": "IPseudoNFTMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "4071:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPseudoNFTMarket_$151_$",
                          "typeString": "type(contract IPseudoNFTMarket)"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4071:33:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                        "typeString": "contract IPseudoNFTMarket"
                      }
                    },
                    "src": "4054:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                      "typeString": "contract IPseudoNFTMarket"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "4054:50:2"
                },
                {
                  "expression": {
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 275,
                      "name": "finxterNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "4151:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                        "typeString": "contract IFinxterNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 277,
                          "name": "_finxterNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "4176:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 276,
                        "name": "IFinxterNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "4164:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFinxterNFT_$162_$",
                          "typeString": "type(contract IFinxterNFT)"
                        }
                      },
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4164:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                        "typeString": "contract IFinxterNFT"
                      }
                    },
                    "src": "4151:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                      "typeString": "contract IFinxterNFT"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "4151:37:2"
                }
              ]
            },
            "id": 282,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "_nftMarketplace",
                  "nameLocation": "3998:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3990:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3990:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "_finxterNFT",
                  "nameLocation": "4023:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "4015:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4015:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3989:46:2"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4044:0:2"
            },
            "scope": 519,
            "src": "3978:253:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "4634:382:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 295,
                            "name": "_nftTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "4677:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 293,
                            "name": "nftMarketplace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "4652:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                              "typeString": "contract IPseudoNFTMarket"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "available",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 144,
                          "src": "4652:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view external returns (bool)"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4652:37:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46545f4e4f545f464f525f53414c45",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4691:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247",
                          "typeString": "literal_string \"NFT_NOT_FOR_SALE\""
                        },
                        "value": "NFT_NOT_FOR_SALE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63c516d5029fa60ef2db54a9f5b419eba3ba5eba8ce651366f318b5eea807247",
                          "typeString": "literal_string \"NFT_NOT_FOR_SALE\""
                        }
                      ],
                      "id": 292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4644:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4644:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4644:66:2"
                },
                {
                  "assignments": [
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "4737:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "4720:25:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                        "typeString": "struct FinxterDAO.Proposal"
                      },
                      "typeName": {
                        "id": 301,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 300,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 185,
                          "src": "4720:8:2"
                        },
                        "referencedDeclaration": 185,
                        "src": "4720:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 306,
                  "initialValue": {
                    "baseExpression": {
                      "id": 303,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "4748:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                        "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                      }
                    },
                    "id": 305,
                    "indexExpression": {
                      "id": 304,
                      "name": "numProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "4758:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4748:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$185_storage",
                      "typeString": "struct FinxterDAO.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4720:51:2"
                },
                {
                  "expression": {
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 307,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "4781:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal storage pointer"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nftTokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 172,
                      "src": "4781:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 310,
                      "name": "_nftTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "4803:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4781:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "4781:33:2"
                },
                {
                  "expression": {
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 313,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "4903:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal storage pointer"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "deadline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "4903:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 316,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4923:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4923:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4941:9:2",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        },
                        "value": "5"
                      },
                      "src": "4923:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4903:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "4903:47:2"
                },
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4961:14:2",
                    "subExpression": {
                      "id": 322,
                      "name": "numProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "4961:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "4961:14:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 325,
                      "name": "numProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "4993:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5008:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4993:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 291,
                  "id": 328,
                  "nodeType": "Return",
                  "src": "4986:23:2"
                }
              ]
            },
            "documentation": {
              "id": 283,
              "nodeType": "StructuredDocumentation",
              "src": "4237:278:2",
              "text": "@dev createProposal allows a FinxterNFT holder to create a new proposal in the DAO\n @param _nftTokenId - the tokenID of the NFT to be purchased from PseudoNFTMarketplace if this proposal passes\n @return Returns the proposal index for the newly created proposal"
            },
            "functionSelector": "5a43dc00",
            "id": 330,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 288,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 287,
                  "name": "nftHolderOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 218,
                  "src": "4590:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4590:13:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "4529:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "_nftTokenId",
                  "nameLocation": "4552:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "4544:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4544:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4543:21:2"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "4621:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4621:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4620:9:2"
            },
            "scope": 519,
            "src": "4520:496:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "5409:885:2",
              "statements": [
                {
                  "assignments": [
                    346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 346,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "5436:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "5419:25:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                        "typeString": "struct FinxterDAO.Proposal"
                      },
                      "typeName": {
                        "id": 345,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 344,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 185,
                          "src": "5419:8:2"
                        },
                        "referencedDeclaration": 185,
                        "src": "5419:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "initialValue": {
                    "baseExpression": {
                      "id": 347,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "5447:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                        "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                      }
                    },
                    "id": 349,
                    "indexExpression": {
                      "id": 348,
                      "name": "proposalIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "5457:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5447:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$185_storage",
                      "typeString": "struct FinxterDAO.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5419:52:2"
                },
                {
                  "assignments": [
                    355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 355,
                      "mutability": "mutable",
                      "name": "nfttokens",
                      "nameLocation": "5556:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "5539:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 353,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5539:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 354,
                        "nodeType": "ArrayTypeName",
                        "src": "5539:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 358,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5593:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5593:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 356,
                        "name": "finxterNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "5568:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFinxterNFT_$162",
                          "typeString": "contract IFinxterNFT"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "walletOfOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 161,
                      "src": "5568:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (uint256[] memory)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5568:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5539:65:2"
                },
                {
                  "assignments": [
                    363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 363,
                      "mutability": "mutable",
                      "name": "numVotes",
                      "nameLocation": "5622:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "5614:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 362,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5614:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 365,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5633:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5614:20:2"
                },
                {
                  "body": {
                    "id": 403,
                    "nodeType": "Block",
                    "src": "5820:222:2",
                    "statements": [
                      {
                        "assignments": [
                          378
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 378,
                            "mutability": "mutable",
                            "name": "tokenId",
                            "nameLocation": "5842:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 403,
                            "src": "5834:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 377,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5834:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 382,
                        "initialValue": {
                          "baseExpression": {
                            "id": 379,
                            "name": "nfttokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "5852:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 381,
                          "indexExpression": {
                            "id": 380,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 367,
                            "src": "5862:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5852:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5834:30:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 383,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 346,
                                "src": "5882:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                  "typeString": "struct FinxterDAO.Proposal storage pointer"
                                }
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "voters",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 184,
                              "src": "5882:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 386,
                            "indexExpression": {
                              "id": 385,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "5898:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5882:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5910:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "5882:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 402,
                        "nodeType": "IfStatement",
                        "src": "5878:154:2",
                        "trueBody": {
                          "id": 401,
                          "nodeType": "Block",
                          "src": "5917:115:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "5935:10:2",
                                "subExpression": {
                                  "id": 389,
                                  "name": "numVotes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 363,
                                  "src": "5935:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 391,
                              "nodeType": "ExpressionStatement",
                              "src": "5935:10:2"
                            },
                            {
                              "expression": {
                                "id": 398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 392,
                                      "name": "proposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 346,
                                      "src": "5963:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                        "typeString": "struct FinxterDAO.Proposal storage pointer"
                                      }
                                    },
                                    "id": 395,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "voters",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 184,
                                    "src": "5963:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                      "typeString": "mapping(uint256 => bool)"
                                    }
                                  },
                                  "id": 396,
                                  "indexExpression": {
                                    "id": 394,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "5979:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5963:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 397,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5990:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5963:31:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 399,
                              "nodeType": "ExpressionStatement",
                              "src": "5963:31:2"
                            },
                            {
                              "id": 400,
                              "nodeType": "Break",
                              "src": "6012:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 370,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "5793:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 371,
                        "name": "nfttokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "5797:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5797:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5793:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 404,
                  "initializationExpression": {
                    "assignments": [
                      367
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5786:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 404,
                        "src": "5778:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5778:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 369,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5790:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5778:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5815:3:2",
                      "subExpression": {
                        "id": 374,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "5815:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 376,
                    "nodeType": "ExpressionStatement",
                    "src": "5815:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5773:269:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 406,
                          "name": "numVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "6059:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6070:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6059:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414c52454144595f564f544544",
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6073:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80",
                          "typeString": "literal_string \"ALREADY_VOTED\""
                        },
                        "value": "ALREADY_VOTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72a8bf26f63b81d34ae017be64d032dd31949e8f70c17024f66048293c93ae80",
                          "typeString": "literal_string \"ALREADY_VOTED\""
                        }
                      ],
                      "id": 405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6051:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6051:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "6051:38:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Vote_$188",
                      "typeString": "enum FinxterDAO.Vote"
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 412,
                      "name": "vote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "6156:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Vote_$188",
                        "typeString": "enum FinxterDAO.Vote"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 413,
                        "name": "Vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "6164:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Vote_$188_$",
                          "typeString": "type(enum FinxterDAO.Vote)"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "YAY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "6164:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Vote_$188",
                        "typeString": "enum FinxterDAO.Vote"
                      }
                    },
                    "src": "6156:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 429,
                    "nodeType": "Block",
                    "src": "6234:54:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 423,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 346,
                              "src": "6248:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                "typeString": "struct FinxterDAO.Proposal storage pointer"
                              }
                            },
                            "id": 425,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "nayVotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 178,
                            "src": "6248:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 426,
                            "name": "numVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "6269:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6248:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 428,
                        "nodeType": "ExpressionStatement",
                        "src": "6248:29:2"
                      }
                    ]
                  },
                  "id": 430,
                  "nodeType": "IfStatement",
                  "src": "6152:136:2",
                  "trueBody": {
                    "id": 422,
                    "nodeType": "Block",
                    "src": "6174:54:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 416,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 346,
                              "src": "6188:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                "typeString": "struct FinxterDAO.Proposal storage pointer"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "yayVotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 176,
                            "src": "6188:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 419,
                            "name": "numVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "6209:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6188:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 421,
                        "nodeType": "ExpressionStatement",
                        "src": "6188:29:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 331,
              "nodeType": "StructuredDocumentation",
              "src": "5022:239:2",
              "text": "@dev voteOnProposal allows a FinxterNFT holder to cast their vote on an active proposal\n @param proposalIndex - the index of the proposal to vote on in the proposals array\n @param vote - the type of vote they want to cast"
            },
            "functionSelector": "efafb22e",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 339,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 338,
                  "name": "nftHolderOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 218,
                  "src": "5349:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5349:13:2"
              },
              {
                "arguments": [
                  {
                    "id": 341,
                    "name": "proposalIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 333,
                    "src": "5390:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 342,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 340,
                  "name": "activeProposalOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 235,
                  "src": "5371:18:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5371:33:2"
              }
            ],
            "name": "voteOnProposal",
            "nameLocation": "5275:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "proposalIndex",
                  "nameLocation": "5298:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "5290:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5290:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "vote",
                  "nameLocation": "5318:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "5313:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Vote_$188",
                    "typeString": "enum FinxterDAO.Vote"
                  },
                  "typeName": {
                    "id": 335,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 334,
                      "name": "Vote",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 188,
                      "src": "5313:4:2"
                    },
                    "referencedDeclaration": 188,
                    "src": "5313:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Vote_$188",
                      "typeString": "enum FinxterDAO.Vote"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5289:34:2"
            },
            "returnParameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5409:0:2"
            },
            "scope": 519,
            "src": "5266:1028:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 489,
              "nodeType": "Block",
              "src": "6644:494:2",
              "statements": [
                {
                  "assignments": [
                    445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 445,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "6671:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 489,
                      "src": "6654:25:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                        "typeString": "struct FinxterDAO.Proposal"
                      },
                      "typeName": {
                        "id": 444,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 443,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 185,
                          "src": "6654:8:2"
                        },
                        "referencedDeclaration": 185,
                        "src": "6654:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 449,
                  "initialValue": {
                    "baseExpression": {
                      "id": 446,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "6682:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$185_storage_$",
                        "typeString": "mapping(uint256 => struct FinxterDAO.Proposal storage ref)"
                      }
                    },
                    "id": 448,
                    "indexExpression": {
                      "id": 447,
                      "name": "proposalIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "6692:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6682:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$185_storage",
                      "typeString": "struct FinxterDAO.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6654:52:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 450,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "6840:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal storage pointer"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "yayVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 176,
                      "src": "6840:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 452,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "6860:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                          "typeString": "struct FinxterDAO.Proposal storage pointer"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nayVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 178,
                      "src": "6860:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6840:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 488,
                  "nodeType": "IfStatement",
                  "src": "6836:296:2",
                  "trueBody": {
                    "id": 487,
                    "nodeType": "Block",
                    "src": "6879:253:2",
                    "statements": [
                      {
                        "assignments": [
                          456
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 456,
                            "mutability": "mutable",
                            "name": "nftPrice",
                            "nameLocation": "6901:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 487,
                            "src": "6893:16:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 455,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6893:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 460,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 457,
                              "name": "nftMarketplace",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "6912:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                                "typeString": "contract IPseudoNFTMarket"
                              }
                            },
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 136,
                            "src": "6912:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6912:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6893:44:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 464,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "6967:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_FinxterDAO_$519",
                                        "typeString": "contract FinxterDAO"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_FinxterDAO_$519",
                                        "typeString": "contract FinxterDAO"
                                      }
                                    ],
                                    "id": 463,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6959:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 462,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6959:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 465,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6959:13:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "6959:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 467,
                                "name": "nftPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 456,
                                "src": "6984:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6959:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e4f545f454e4f5547485f46554e4453",
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6994:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b",
                                "typeString": "literal_string \"NOT_ENOUGH_FUNDS\""
                              },
                              "value": "NOT_ENOUGH_FUNDS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f94490d5cc7c3d4a74009a27a55660fbfe5faef6b6d7c1b58c26f5be9050fd7b",
                                "typeString": "literal_string \"NOT_ENOUGH_FUNDS\""
                              }
                            ],
                            "id": 461,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6951:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6951:62:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 471,
                        "nodeType": "ExpressionStatement",
                        "src": "6951:62:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 477,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 445,
                                "src": "7063:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                  "typeString": "struct FinxterDAO.Proposal storage pointer"
                                }
                              },
                              "id": 478,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nftTokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 172,
                              "src": "7063:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 472,
                                "name": "nftMarketplace",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "7027:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPseudoNFTMarket_$151",
                                  "typeString": "contract IPseudoNFTMarket"
                                }
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buy",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 150,
                              "src": "7027:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 475,
                                "name": "nftPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 456,
                                "src": "7053:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "7027:35:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7027:56:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 480,
                        "nodeType": "ExpressionStatement",
                        "src": "7027:56:2"
                      },
                      {
                        "expression": {
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 481,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 445,
                              "src": "7097:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$185_storage_ptr",
                                "typeString": "struct FinxterDAO.Proposal storage pointer"
                              }
                            },
                            "id": 483,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 180,
                            "src": "7097:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7117:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7097:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 486,
                        "nodeType": "ExpressionStatement",
                        "src": "7097:24:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 433,
              "nodeType": "StructuredDocumentation",
              "src": "6300:204:2",
              "text": "@dev executeProposal allows any FinxterNFT holder to execute a proposal after it's deadline has been exceeded\n @param proposalIndex - the index of the proposal to execute in the proposals array"
            },
            "functionSelector": "0d61b519",
            "id": 490,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 438,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 437,
                  "name": "nftHolderOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 218,
                  "src": "6582:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6582:13:2"
              },
              {
                "arguments": [
                  {
                    "id": 440,
                    "name": "proposalIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 435,
                    "src": "6625:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 441,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 439,
                  "name": "inactiveProposalOnly",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 262,
                  "src": "6604:20:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6604:35:2"
              }
            ],
            "name": "executeProposal",
            "nameLocation": "6518:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "proposalIndex",
                  "nameLocation": "6542:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 490,
                  "src": "6534:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6534:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6533:23:2"
            },
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6644:0:2"
            },
            "scope": 519,
            "src": "6509:629:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 509,
              "nodeType": "Block",
              "src": "7290:65:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 504,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "7334:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FinxterDAO_$519",
                                "typeString": "contract FinxterDAO"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FinxterDAO_$519",
                                "typeString": "contract FinxterDAO"
                              }
                            ],
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7326:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 502,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7326:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7326:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "7326:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 498,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "7308:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7308:7:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7300:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 496,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7300:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7300:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7300:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7300:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "7300:48:2"
                }
              ]
            },
            "documentation": {
              "id": 491,
              "nodeType": "StructuredDocumentation",
              "src": "7144:97:2",
              "text": "@dev withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract"
            },
            "functionSelector": "7362377b",
            "id": 510,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 494,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 493,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "7280:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7280:9:2"
              }
            ],
            "name": "withdrawEther",
            "nameLocation": "7255:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7268:2:2"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7290:0:2"
            },
            "scope": 519,
            "src": "7246:109:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "7522:2:2",
              "statements": []
            },
            "id": 514,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7502:2:2"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7522:0:2"
            },
            "scope": 519,
            "src": "7495:29:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 517,
              "nodeType": "Block",
              "src": "7558:2:2",
              "statements": []
            },
            "id": 518,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7538:2:2"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7558:0:2"
            },
            "scope": 519,
            "src": "7530:30:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 520,
        "src": "1153:6409:2",
        "usedErrors": []
      }
    ],
    "src": "32:7531:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x75e7C0243d0A0564C93aE2ef53aC74E76151a4E1",
      "transactionHash": "0x0d3c4ec40cec087372595ece9ed4976ec067ddf0d11831a756d189ffc199421f"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-04-29T15:41:09.599Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createProposal(uint256)": {
        "details": "createProposal allows a FinxterNFT holder to create a new proposal in the DAO",
        "params": {
          "_nftTokenId": "- the tokenID of the NFT to be purchased from PseudoNFTMarketplace if this proposal passes"
        },
        "returns": {
          "_0": "Returns the proposal index for the newly created proposal"
        }
      },
      "executeProposal(uint256)": {
        "details": "executeProposal allows any FinxterNFT holder to execute a proposal after it's deadline has been exceeded",
        "params": {
          "proposalIndex": "- the index of the proposal to execute in the proposals array"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "voteOnProposal(uint256,uint8)": {
        "details": "voteOnProposal allows a FinxterNFT holder to cast their vote on an active proposal",
        "params": {
          "proposalIndex": "- the index of the proposal to vote on in the proposals array",
          "vote": "- the type of vote they want to cast"
        }
      },
      "withdrawEther()": {
        "details": "withdrawEther allows the contract owner (deployer) to withdraw the ETH from the contract"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}